total: 0 errors, 0 warnings, 1 lines checked

ApplicationLayer/tektagon/.git has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

ApplicationLayer/tektagon/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/dts/bindings/demo,gpio_basic_api.yaml:1:
+#

total: 0 errors, 1 warnings, 29 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/dts/bindings/demo,gpio_basic_api.yaml has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 43 lines checked

ApplicationLayer/tektagon/CMakeLists.txt has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:8:
+//***********************************************************************//
+

WARNING: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#41: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:41:
+extern volatile struct st_i2cCtx_t i2c_efb;

WARNING: do not add new typedefs
#44: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:44:
+typedef struct _EVENT_CONTEXT {

WARNING: Block comments use a trailing */ on a separate line
#56: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:56:
+	 * 1 - secondary->primary */

WARNING: do not add new typedefs
#61: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h:61:
+typedef struct _AO_DATA {

total: 0 errors, 12 warnings, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:8:
+//***********************************************************************//
+

WARNING: printk() should include KERN_<LEVEL> facility level
#42: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:42:
+	printk("enter wdt_callback_bmc_timeout \n");

WARNING: Prefer using '"%s...", __func__' to using 'wdt_callback_bmc_timeout', this function's name, in a string
#42: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:42:
+	printk("enter wdt_callback_bmc_timeout \n");

WARNING: unnecessary whitespace before a quoted newline
#42: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:42:
+	printk("enter wdt_callback_bmc_timeout \n");

WARNING: Missing a blank line after declarations
#46: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:46:
+	EVENT_CONTEXT *EventData;
+	EventData->flash = PRIMARY_FLASH_REGION;

WARNING: printk() should include KERN_<LEVEL> facility level
#55: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:55:
+	printk("enter wdt_callback_pch_timeout\n");

WARNING: Prefer using '"%s...", __func__' to using 'wdt_callback_pch_timeout', this function's name, in a string
#55: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:55:
+	printk("enter wdt_callback_pch_timeout\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#86: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:86:
+		printk("wdt_timer_err: cannot find wdt device.\n");

WARNING: Block comments use * on subsequent lines
#135: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:135:
+/**
+    Function to Update the BMC data with verify signal to

WARNING: Block comments use * on subsequent lines
#165: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:165:
+/**
+    Function to Update the PCH data with verify signal to

WARNING: Missing a blank line after declarations
#206: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:206:
+		int releasePCH = 1;
+		Set_SPI_Filter_RW_Region("spi_m1", SPI_FILTER_WRITE_PRIV, SPI_FILTER_PRIV_ENABLE, 0x0, 0x08000000);

WARNING: Missing a blank line after declarations
#244: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:244:
+	int release_pch = 0;
+	if (EventData->image == BMC_EVENT) {

WARNING: Block comments use * on subsequent lines
#335: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:335:
+/**
+    Function to perform image verification

WARNING: braces {} are not necessary for any arm of this statement
#409: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:409:
+		if (((AO_DATA *)AoData)->ActiveImageStatus == Failure) {
[...]
+		} else if (((AO_DATA *)AoData)->RecoveryImageStatus == Failure) {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#416: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:416:
+		if (((AO_DATA *)AoData)->ActiveImageStatus == Failure) {
[...]
+		} else if (((AO_DATA *)AoData)->RecoveryImageStatus == Failure) {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#461: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:461:
+	if (EventData->flash == SECONDARY_FLASH_REGION) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#497: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:497:
+		if (ActiveObjectData->RecoveryImageStatus != Success) {
+			CheckAndReleasePlatform(AoData, EventData);
+		}

WARNING: Block comments use * on subsequent lines
#505: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:505:
+/**
+    Function to perform image recovery verify

WARNING: braces {} are not necessary for any arm of this statement
#558: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:558:
+	if (ImageType == BMC_EVENT) {
[...]
+	} else if (ImageType == PCH_EVENT) {
[...]

WARNING: Block comments use * on subsequent lines
#602: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:602:
+/**
+    Function to perform image Update

WARNING: braces {} are not necessary for any arm of this statement
#622: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:622:
+		if (EventData->image == BMC_EVENT) {
[...]
+		} else if (EventData->image == PCH_EVENT) {
[...]
+		} else {
[...]

WARNING: Block comments use * on subsequent lines
#637: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:637:
+/**
+    Function that indicates current I2C command status

WARNING: braces {} are not necessary for single statement blocks
#650: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:650:
+	if (ActiveObjectData->type == BMC_EVENT || ActiveObjectData->type == PCH_EVENT) {
+		PublishInitialEvents();
+	}

WARNING: braces {} are not necessary for single statement blocks
#654: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:654:
+	if (ActiveObjectData->type == HROT_TYPE) {
+		pfr_cpld_update_reboot();
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#674: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:674:
+	printk("PowerOn Failure post recovery action \n");

WARNING: unnecessary whitespace before a quoted newline
#674: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:674:
+	printk("PowerOn Failure post recovery action \n");

WARNING: braces {} are not necessary for single statement blocks
#698: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:698:
+	if (releaseBmc) {
+		BMCBootRelease();
+	}

WARNING: braces {} are not necessary for single statement blocks
#702: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:702:
+	if (releasePCH) {
+		PCHBootRelease();
+	}

WARNING: Missing a blank line after declarations
#718: FILE: ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c:718:
+	int image_type = ao_data->type;
+	if (image_type == BMC_EVENT) {

total: 0 errors, 36 warnings, 748 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/StateMachineAction/StateMachineActions.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 29 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/imageVerification/image_verify.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for single statement blocks
#146: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:146:
+	for (int rw_index = 0; rw_index < allow_firmware.header.rw_count; rw_index++) {
+		firmware_offset += sizeof(struct allowable_rw_region);
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#174: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:174:
+			printk("Active Verification Fail\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#175: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:175:
+			printk("start_address:%x\n", *((uint32_t *) firmware_info.start_address));

WARNING: printk() should include KERN_<LEVEL> facility level
#176: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:176:
+			printk("end_address:%x\n", *((uint32_t *) firmware_info.end_address));

WARNING: printk() should include KERN_<LEVEL> facility level
#178: FILE: ApplicationLayer/tektagon/src/imageVerification/image_verify.c:178:
+			printk("Active Region offset %x verify successful\n", *((uint32_t *) firmware_info.start_address));

total: 0 errors, 13 warnings, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/imageVerification/image_verify.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:8:
+//***********************************************************************//
+

WARNING: else is not generally useful after a break or return
#34: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:34:
+		return 0;
+	} else {

WARNING: printk() should include KERN_<LEVEL> facility level
#35: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:35:
+		printk("Recovery Header Magic Number not Match.\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#100: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:100:
+			printk("Start Recovery\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#107: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:107:
+			printk("recovery offset:%x\n", active_write_offset);

WARNING: printk() should include KERN_<LEVEL> facility level
#122: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:122:
+			printk("recovery offset:%x recovery successful\n", active_write_offset);

WARNING: Missing a blank line after declarations
#144: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:144:
+		int status = read_rsa_public_key(&pub_key);
+		if (status) {

WARNING: braces {} are not necessary for single statement blocks
#144: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:144:
+		if (status) {
+			return status;
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#147: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:147:
+		printk("Recovery Verification\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#157: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:157:
+			printk("Recovery Verification Fail\n");

WARNING: else is not generally useful after a break or return
#159: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:159:
+			return recovery_verify_result;
+		} else {

WARNING: printk() should include KERN_<LEVEL> facility level
#160: FILE: ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c:160:
+			printk("Recovery Verification Successful\n");

total: 0 errors, 19 warnings, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/imageRecovery/image_recovery.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:8:
+//***********************************************************************//
+

WARNING: do not add new typedefs
#22: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:22:
+typedef struct {

WARNING: do not add new typedefs
#31: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:31:
+typedef char byte;

WARNING: Block comments use * on subsequent lines
#40: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:40:
+/*uint8_t gUfmFifoData[32];
+   uint8_t gReadFifoData[32];

WARNING: Block comments use a trailing */ on a separate line
#43: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:43:
+   uint8_t gBmcOffsets[13];*/

WARNING: do not add new typedefs
#47: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:47:
+typedef struct _SMBUS_MAIL_BOX_ {

WARNING: do not add new typedefs
#130: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:130:
+typedef enum _SMBUS_MAILBOX_RF_ADDRESS_READONLY {

WARNING: do not add new typedefs
#169: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:169:
+typedef enum _EXECUTION_CHECKPOINT {

WARNING: do not add new typedefs
#184: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:184:
+typedef enum _UPDATE_INTENT {

WARNING: do not add new typedefs
#207: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h:207:
+typedef struct _PFM_STRUCTURE {

total: 0 errors, 17 warnings, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:8:
+//***********************************************************************//
+#include "Smbus_mailbox.h"

WARNING: externs should be avoided in .c files
#30: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:30:
+extern struct st_pfr_instance pfr_instance;

WARNING: externs should be avoided in .c files
#49: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:49:
+extern bool gBootCheckpointReceived;

WARNING: externs should be avoided in .c files
#50: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:50:
+extern uint32_t gMaxTimeout;

WARNING: externs should be avoided in .c files
#51: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:51:
+extern int gBMCWatchDogTimer;

WARNING: externs should be avoided in .c files
#52: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:52:
+extern int gPCHWatchDogTimer;

WARNING: Block comments use * on subsequent lines
#71: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:71:
+/**
+    Function to Erase th UFM

WARNING: Block comments use * on subsequent lines
#87: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:87:
+/**
+    Function to Initialize Smbus Mailbox with default value

WARNING: Prefer ARRAY_SIZE(buffer)
#111: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:111:
+	status = spi_flash->spi.base.read(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: braces {} are not necessary for single statement blocks
#117: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:117:
+			for (int i = addr; i < DataSize + addr; i++) {
+				buffer[i] = DataBuffer[i - addr];
+			}

WARNING: Prefer ARRAY_SIZE(buffer)
#123: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:123:
+			status = spi_flash->spi.base.write(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: Prefer ARRAY_SIZE(buffer)
#128: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:128:
+	status = spi_flash->spi.base.read(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: Missing a blank line after declarations
#160: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:160:
+	uint32_t UfmStatus;
+	get_provision_data_in_flash(UFM_STATUS, &UfmStatus, sizeof(uint32_t) / sizeof(uint8_t));

WARNING: braces {} are not necessary for single statement blocks
#168: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:168:
+	if (memcmp(UfmStatus & provision_flag, 0) == 0) {
+		set_provision_status(UFM_PROVISIONED);
+	}

WARNING: Missing a blank line after declarations
#187: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:187:
+		uint32_t pch_rec_address;
+		memcpy(&pch_rec_address, gPchOffsets + 4, 4);

WARNING: Missing a blank line after declarations
#210: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:210:
+		uint32_t bmc_rec_address;
+		memcpy(&bmc_rec_address, gBmcOffsets + 4, 4);

WARNING: Missing a blank line after declarations
#219: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:219:
+	uint8_t current_svn;
+	current_svn = get_ufm_svn(NULL, SVN_POLICY_FOR_CPLD_UPDATE);

WARNING: Block comments use * on subsequent lines
#375: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:375:
+	/*else
+		ReadFromMailbox(UfmStatusValue, &UfmStatus);*/

WARNING: Block comments use a trailing */ on a separate line
#375: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:375:
+		ReadFromMailbox(UfmStatusValue, &UfmStatus);*/

WARNING: Block comments use * on subsequent lines
#395: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:395:
+	/*else
+		ReadFromMailbox(UfmCommand, &UfmCommandData);*/

WARNING: Block comments use a trailing */ on a separate line
#395: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:395:
+		ReadFromMailbox(UfmCommand, &UfmCommandData);*/

WARNING: Missing a blank line after declarations
#682: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:682:
+	uint8_t HashData[SHA256_DIGEST_LENGTH] = {0};
+	memcpy(HashData, gSmbusMailboxData.CpldFPGARoTHash, SHA256_DIGEST_LENGTH);

WARNING: Consider removing the #if 1 and its #endif
#703: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:703:
+#if 1

WARNING: braces {} are not necessary for single statement blocks
#711: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:711:
+	if (gRootKeyHash == NULL) {
+		return Failure;
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#724: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:724:
+		printk("Unsupported error\n");

WARNING: Block comments use * on subsequent lines
#806: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:806:
+/**
+    Function to process th UFM command operations

WARNING: printk() should include KERN_<LEVEL> facility level
#911: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:911:
+			printk("Status: %x\n", Status);

WARNING: Missing a blank line after declarations
#919: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:919:
+		CPLD_STATUS cpld_status;
+		ufm_read(UPDATE_STATUS_UFM, UPDATE_STATUS_ADDRESS, &cpld_status, sizeof(CPLD_STATUS));

WARNING: Block comments use * on subsequent lines
#928: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:928:
+/**
+    Function to update the Bmc Checkpoint

WARNING: printk() should include KERN_<LEVEL> facility level
#945: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:945:
+		printk("Enter PausingExecutionBlock Disable Timer \n");

WARNING: unnecessary whitespace before a quoted newline
#945: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:945:
+		printk("Enter PausingExecutionBlock Disable Timer \n");

WARNING: braces {} are not necessary for single statement blocks
#948: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:948:
+	if (Data == ResumedExecutionBlock) {
+		Tektagon_EnableTimer(BMC_EVENT);
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#955: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:955:
+		printk("Enter CompletingexecutionBlock Disable Timer \n");

WARNING: unnecessary whitespace before a quoted newline
#955: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:955:
+		printk("Enter CompletingexecutionBlock Disable Timer \n");

WARNING: braces {} are not necessary for single statement blocks
#965: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:965:
+	if (Data == RESET_BMC) {
+		SetLastPanicReason(BMC_RESET_DETECT);
+	}

WARNING: braces {} are not necessary for single statement blocks
#968: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:968:
+	if (gBmcBootDone == TRUE && gBiosBootDone == TRUE) {
+		SetPlatformState(T0_BOOT_COMPLETED);
+	}

WARNING: braces {} are not necessary for single statement blocks
#990: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:990:
+	if (Data == PausingExecutionBlock) {
+		Tektagon_DisableTimer(PCH_EVENT);
+	}

WARNING: braces {} are not necessary for single statement blocks
#993: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:993:
+	if (Data == ResumedExecutionBlock) {
+		Tektagon_EnableTimer(PCH_EVENT);
+	}

WARNING: braces {} are not necessary for single statement blocks
#1011: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1011:
+	if (gBmcBootDone == TRUE && gBiosBootDone == TRUE) {
+		SetPlatformState(T0_BOOT_COMPLETED);
+	}

WARNING: __func__ should be used instead of gcc specific __FUNCTION__
#1028: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1028:
+		DEBUG_PRINTF("%s : event queue not available !\n", __FUNCTION__);

WARNING: braces {} are not necessary for single statement blocks
#1066: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1066:
+		if (Data & PlatfireRecoveryUpdate) {
+			DEBUG_PRINTF("PlatfireRecoveryUpdate not supported\r\n");
+		}

WARNING: braces {} are not necessary for single statement blocks
#1069: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1069:
+		if (Data & DymanicUpdate) {
+			DEBUG_PRINTF("DymanicUpdate not supported\r\n");
+		}

WARNING: else is not generally useful after a break or return
#1084: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1084:
+				return;
+			} else {

WARNING: braces {} are not necessary for single statement blocks
#1096: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1096:
+		if (Data & PchRecoveryUpdate) {
+			PublishUpdateEvent(PCH_EVENT, SECONDARY_FLASH_REGION);
+		}

WARNING: else is not generally useful after a break or return
#1117: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1117:
+				return;
+			} else {

WARNING: braces {} are not necessary for single statement blocks
#1121: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1121:
+		if (Data & BmcRecoveryUpdate) {
+			PublishUpdateEvent(BMC_EVENT, SECONDARY_FLASH_REGION);
+		}

WARNING: braces {} are not necessary for single statement blocks
#1124: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1124:
+		if (Data & PlatfireRecoveryUpdate) {
+			DEBUG_PRINTF("PlatfireRecoveryUpdate not supported\r\n");
+		}

WARNING: braces {} are not necessary for single statement blocks
#1127: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1127:
+		if (Data & DymanicUpdate) {
+			DEBUG_PRINTF("DymanicUpdate not supported\r\n");
+		}

WARNING: Block comments use * on subsequent lines
#1135: FILE: ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c:1135:
+/**
+   Function to Check if system boots fine based on TimerISR

total: 0 errors, 56 warnings, 1301 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/Smbus_mailbox/Smbus_mailbox.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/context_manager/context_manager.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for single statement blocks
#25: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:25:
+	if (new_context) {
+		memcpy(context_manager, new_context, sizeof(struct Context_Manager));
+	}

WARNING: Missing a blank line after declarations
#55: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:55:
+	struct SpiEngine *spi_flash = getSpiEngineWrapper();
+	spi_flash->spi.device_id[0] = ROT_INTERNAL_STATE;

WARNING: Prefer ARRAY_SIZE(buffer)
#58: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:58:
+	status = spi_flash->spi.base.read(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: braces {} are not necessary for single statement blocks
#64: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:64:
+			for (int i = addr; i < DataSize + addr; i++) {
+				buffer[i] = DataBuffer[i - addr];
+			}

WARNING: Prefer ARRAY_SIZE(buffer)
#70: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:70:
+			status = spi_flash->spi.base.write(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: Prefer ARRAY_SIZE(buffer)
#75: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:75:
+	status = spi_flash->spi.base.read(&spi_flash->spi, 0, buffer, sizeof(buffer) / sizeof(buffer[0]));

WARNING: braces {} are not necessary for single statement blocks
#92: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:92:
+	if (context == NULL) {
+		return APP_CONTEXT_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#113: FILE: ApplicationLayer/tektagon/src/context_manager/context_manager.c:113:
+	if (context == NULL) {
+		return APP_CONTEXT_INVALID_ARGUMENT;
+	}

total: 0 errors, 16 warnings, 127 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/context_manager/context_manager.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/main.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/main.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/main.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/main.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/main.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/main.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/main.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/main.c:8:
+//***********************************************************************//
+

WARNING: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#24: FILE: ApplicationLayer/tektagon/src/main.c:24:
+		volatile int halt = 1;		  \

WARNING: printk() should include KERN_<LEVEL> facility level
#34: FILE: ApplicationLayer/tektagon/src/main.c:34:
+	printk("\r\n *** Tektagon OE version 1.0 ***\r\n");

total: 0 errors, 10 warnings, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/main.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 24 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:8:
+//***********************************************************************//
+

WARNING: printk() should include KERN_<LEVEL> facility level
#53: FILE: ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c:53:
+		printk("Manifest Verificaation Successful\n");

total: 0 errors, 9 warnings, 59 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/manifestProcessor/manifestProcessor.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/include/definitions.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/include/definitions.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/include/definitions.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/include/definitions.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/include/definitions.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/include/definitions.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/include/definitions.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/include/definitions.h:8:
+//***********************************************************************//
+

WARNING: printk() should include KERN_<LEVEL> facility level
#33: FILE: ApplicationLayer/tektagon/src/include/definitions.h:33:
+#define DEBUG_PRINTF(val) printk(val)

WARNING: Block comments use * on subsequent lines
#47: FILE: ApplicationLayer/tektagon/src/include/definitions.h:47:
+/*enum {
+

WARNING: Block comments use a trailing */ on a separate line
#48: FILE: ApplicationLayer/tektagon/src/include/definitions.h:48:
+   };*/

total: 0 errors, 11 warnings, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/include/definitions.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:8:
+//***********************************************************************//
+

WARNING: do not add new typedefs
#18: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:18:
+typedef char byte;

WARNING: do not add new typedefs
#20: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:20:
+typedef enum _PLATFORM_STATE_VALUE {

WARNING: do not add new typedefs
#47: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:47:
+typedef enum _LAST_RECOVERY_REASON_VALUE {

WARNING: do not add new typedefs
#61: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:61:
+typedef enum _LAST_PANIC_REASON_VALUE {

WARNING: do not add new typedefs
#74: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:74:
+typedef enum _MAJOR_ERROR_CODE_VALUE {

WARNING: do not add new typedefs
#86: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:86:
+typedef enum _MINOR_ERROR_CODE_VALUE {

WARNING: do not add new typedefs
#114: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:114:
+typedef enum _UFM_PROVISONING_STATUS_VALUE {

WARNING: do not add new typedefs
#124: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:124:
+typedef enum _UFM_PROVISIONING_COMMAND_VALUE {

WARNING: do not add new typedefs
#142: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:142:
+typedef enum _UFM_COMMAND_TRIGGER_VALUE {

WARNING: do not add new typedefs
#148: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:148:
+typedef enum _BMC_CHECKPOINTS_VALUE {

WARNING: do not add new typedefs
#167: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:167:
+typedef enum _ACM_BIOS_CHECKPOINT_VALUE {

WARNING: do not add new typedefs
#175: FILE: ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h:175:
+typedef enum _BMC_PCH_UPDATE_INTENT_VALUE {

total: 0 errors, 20 warnings, 186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/include/SmbusMailBoxCom.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for single statement blocks
#56: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:56:
+					if (status != Success) {
+						return Failure;
+					}

WARNING: braces {} are not necessary for single statement blocks
#68: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:68:
+			if (status != Success) {
+				return Failure;
+			}

WARNING: braces {} are not necessary for single statement blocks
#74: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:74:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#83: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.c:83:
+		if (status != Success) {
+			return Failure;
+		}

total: 0 errors, 12 warnings, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_recovery.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_ufm.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.c:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_common.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_util.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_recovery.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 13 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_recovery.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.c:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_update.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 24 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_verifcation.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:8:
+//***********************************************************************//
+

WARNING: Consider removing the #if 1 and its #endif
#30: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:30:
+#if 1

WARNING: braces {} are not necessary for single statement blocks
#165: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:165:
+	for (int i = 0; i < length; i++) {
+		DEBUG_PRINTF(" %x", buffer[i]);
+	}

WARNING: braces {} are not necessary for single statement blocks
#178: FILE: ApplicationLayer/tektagon/src/pfr/pfr_util.c:178:
+		if ((buffer1[i] != buffer2[i]) && (status != Failure)) {
+			status = Failure;
+		}

total: 0 errors, 11 warnings, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_util.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:8:
+//***********************************************************************//
+

WARNING: Missing a blank line after declarations
#19: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:19:
+	struct SpiEngine *spi_flash = getSpiEngineWrapper();
+	spi_flash->spi.device_id[0] = ROT_INTERNAL_STATE; // Internal UFM SPI

WARNING: Missing a blank line after declarations
#30: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:30:
+	struct SpiEngine *spi_flash = getSpiEngineWrapper();
+	spi_flash->spi.device_id[0] = ROT_INTERNAL_STATE; // Internal UFM SPI

WARNING: braces {} are not necessary for any arm of this statement
#40: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:40:
+	if (ufm_id == PROVISION_UFM) {
[...]
+	} else if (ufm_id == UPDATE_STATUS_UFM) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#54: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:54:
+	if (ufm_id == PROVISION_UFM) {
[...]
+	} else if (ufm_id == UPDATE_STATUS_UFM) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#68: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:68:
+	if (ufm_id == PROVISION_UFM) {
+		return pfr_spi_erase_4k(ROT_INTERNAL_INTEL_STATE, 0);
+	}

WARNING: braces {} are not necessary for single statement blocks
#71: FILE: ApplicationLayer/tektagon/src/pfr/pfr_ufm.c:71:
+	if (ufm_id == UPDATE_STATUS_UFM) {
+		return pfr_spi_erase_4k(ROT_INTERNAL_STATE, 0);
+	}

total: 0 errors, 14 warnings, 77 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_ufm.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_common.h:8:
+//***********************************************************************//
+#ifndef PFR_COMMON_H_

total: 0 errors, 8 warnings, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_common.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_verification.c:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 205 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_verification.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/pfr/pfr_update.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 14 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/pfr/pfr_update.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/common/common.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/common/common.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/common/common.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/common/common.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/common/common.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/common/common.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/common/common.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/common/common.c:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/common/common.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/common/pfm_headers.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/common/pfm_headers.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/common/common.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/common/common.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/common/common.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/common/common.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/common/common.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/common/common.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/common/common.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/common/common.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/common/common.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/engineManager/engine_manager.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:8:
+//***********************************************************************//
+

WARNING: Missing a blank line after declarations
#71: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:71:
+	int status = 0;
+	status = pfm_flash_init(getPfmFlashInstance(), getFlashDeviceInstance(), get_hash_engine_instance(), PFM_FLASH_MANIFEST_ADDRESS, signature, RSA_MAX_KEY_LENGTH, platform_id, sizeof(platform_id));

WARNING: Missing a blank line after declarations
#115: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:115:
+	struct SpiFilterEngine *spi_filter = getSpiFilterEngineWrapper();
+	spi_filter->dev_id = spi_device_id;  // 0: BMC , 1: PCH

WARNING: Missing a blank line after declarations
#125: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:125:
+	uint32_t pfm_read_address;
+	if (spi_device_id == 0) {

WARNING: braces {} are not necessary for any arm of this statement
#125: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:125:
+	if (spi_device_id == 0) {
[...]
+	} else if (spi_device_id == 1) {
[...]

WARNING: unnecessary whitespace before a quoted newline
#132: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:132:
+	// printk("pfm_read_address is %08x \n", pfm_read_address);

WARNING: Missing a blank line after declarations
#142: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:142:
+	uint8_t region_record[16];
+	spi_flash->spi.device_id[0] = spi_device_id;                    // assign the flash device id,  0:spi1_cs0, 1:spi2_cs0 , 2:spi2_cs1, 3:spi2_cs2, 4:fmc_cs0, 5:fmc_cs1

WARNING: braces {} are not necessary for any arm of this statement
#168: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:168:
+			if ((region_record[2] & 0x01) == 0x01) {
[...]
+			} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#176: FILE: ApplicationLayer/tektagon/src/engineManager/engine_manager.c:176:
+		if (pfm_region_Start > pfm_read_address + 0x400 + pfm_record_length) {
+			break;
+		}

total: 0 errors, 16 warnings, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/engineManager/engine_manager.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:8:
+//***********************************************************************//
+

WARNING: do not add new typedefs
#15: FILE: ApplicationLayer/tektagon/src/state_machine/common_smc.h:15:
+typedef enum {

total: 0 errors, 9 warnings, 32 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/state_machine/common_smc.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:8:
+//***********************************************************************//
+

WARNING: Missing a blank line after declarations
#30: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:30:
+	struct _smc_fifo_event *initial_event = (struct _smc_fifo_event *)k_malloc(sizeof(struct _smc_fifo_event));
+	if (initial_event == NULL) {

WARNING: braces {} are not necessary for single statement blocks
#30: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:30:
+	if (initial_event == NULL) {
+		return ENOMEM;
+	}

WARNING: return of an errno should typically be negative (ie: return -ENOMEM)
#31: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:31:
+		return ENOMEM;

WARNING: braces {} are not necessary for single statement blocks
#51: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:51:
+	if (initial_event) {
+		k_free(initial_event);
+	}

WARNING: braces {} are not necessary for single statement blocks
#93: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:93:
+		if (hrot_event) {
+			k_free(hrot_event);
+		}

WARNING: Missing a blank line after declarations
#135: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:135:
+	struct hrot_smc_context *sm_context = (struct hrot_smc_context *)context;
+	handleVerifyEntryState(sm_context->sm_static_data, sm_context->event_ctx);

WARNING: printk() should include KERN_<LEVEL> facility level
#150: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:150:
+	printk("Executing run_verify\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'run_verify', this function's name, in a string
#150: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:150:
+	printk("Executing run_verify\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#153: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:153:
+	printk("Leaving run_verify\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'run_verify', this function's name, in a string
#153: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:153:
+	printk("Leaving run_verify\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#161: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:161:
+	printk("Executing verify_exit\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'verify_exit', this function's name, in a string
#161: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:161:
+	printk("Executing verify_exit\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#163: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:163:
+	printk("Leaving verify_exit\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'verify_exit', this function's name, in a string
#163: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:163:
+	printk("Leaving verify_exit\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#175: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:175:
+	printk("Executing recovery_entry\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'recovery_entry', this function's name, in a string
#175: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:175:
+	printk("Executing recovery_entry\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#178: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:178:
+	printk("Leaving recovery_entry\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'recovery_entry', this function's name, in a string
#178: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:178:
+	printk("Leaving recovery_entry\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#192: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:192:
+	printk("Executing run_recovery\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'run_recovery', this function's name, in a string
#192: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:192:
+	printk("Executing run_recovery\r\n");

WARNING: Missing a blank line after declarations
#195: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:195:
+	AO_DATA *ActiveObjectData = (AO_DATA *)sm_static_data;
+	imageType = ActiveObjectData->type;

WARNING: printk() should include KERN_<LEVEL> facility level
#210: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:210:
+	printk("Leaving run_recovery\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'run_recovery', this function's name, in a string
#210: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:210:
+	printk("Leaving run_recovery\r\n");

WARNING: braces {} are not necessary for single statement blocks
#294: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:294:
+	if (smc_fifo_entry == NULL) {
+		return ENOMEM;
+	}

WARNING: return of an errno should typically be negative (ie: return -ENOMEM)
#295: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.c:295:
+		return ENOMEM;

total: 0 errors, 33 warnings, 328 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/state_machine/state_machine.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/state_machine/state_machine.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 35 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/state_machine/state_machine.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:8:
+//***********************************************************************//
+

WARNING: Macros with complex values should be enclosed in parentheses
#36: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:36:
+#define RANDOM_KEY_ADDRESS_IN_UFM                               (PROVISION_UFM_SIZE * 16) - (2 * SHA384_SIZE)

WARNING: Macros with complex values should be enclosed in parentheses
#37: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:37:
+#define ROOT_PUB_KEY_LOC_IN_UFM                                 RANDOM_KEY_ADDRESS_IN_UFM - (2 * SHA384_SIZE)

WARNING: do not add new typedefs
#43: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:43:
+typedef struct _PFR_AUTHENTICATION_BLOCK0 {

WARNING: do not add new typedefs
#54: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:54:
+typedef struct _PFR_AUTHENTICATION_BLOCK0_3K {

WARNING: do not add new typedefs
#66: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:66:
+typedef struct _RootEntry {

WARNING: do not add new typedefs
#77: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:77:
+typedef struct _RootEntry_3k {

WARNING: do not add new typedefs
#95: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:95:
+typedef struct _CSKENTRY {

WARNING: do not add new typedefs
#103: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:103:
+typedef struct _CSKENTRY_3K {

WARNING: do not add new typedefs
#117: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:117:
+typedef struct _BLOCK0ENTRY {

WARNING: do not add new typedefs
#125: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:125:
+typedef struct _BLOCK0ENTRY_3K {

WARNING: do not add new typedefs
#138: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:138:
+typedef struct _PFR_AUTHENTICATION_BLOCK1 {

WARNING: do not add new typedefs
#149: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h:149:
+typedef struct _PFR_AUTHENTICATION_BLOCK1_3K {

total: 0 errors, 20 warnings, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 17 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:8:
+//***********************************************************************//
+

WARNING: Block comments use * on subsequent lines
#22: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:22:
+/**
+    Function Used to Verify whether the compression Tag value is Matched or Not

WARNING: braces {} are not necessary for single statement blocks
#37: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:37:
+		if (pfr_spi_read(image_type, *compression_tag, sizeof(tag), (uint8_t *)&tag)) {
+			return Failure;
+		}

WARNING: Block comments use * on subsequent lines
#57: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:57:
+/**
+    Function Used to Erase the Active Area based on the BitMap

WARNING: Block comments use * on subsequent lines
#99: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:99:
+/**
+    Function Used to Write the Compressed Data based on the Bit Map

WARNING: braces {} are not necessary for single statement blocks
#119: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:119:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#127: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:127:
+				if (status != Success) {
+					return Failure;
+				}

WARNING: Block comments use * on subsequent lines
#139: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:139:
+/**
+    Function Used to Decompress The Compressed Capsule bin

WARNING: braces {} are not necessary for single statement blocks
#170: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c:170:
+	if (status != Success) {
+		return Failure;
+	}

total: 0 errors, 16 warnings, 188 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:8:
+//***********************************************************************//
+

WARNING: externs should be avoided in .c files
#30: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:30:
+int pfm_spi_region_verification(struct pfr_manifest *manifest);

WARNING: externs should be avoided in .c files
#31: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:31:
+Manifest_Status get_pfm_manifest_data(struct pfr_manifest *manifest, uint32_t *position, void *spi_definition, uint8_t *pfm_spi_hash, uint8_t pfm_definition);

WARNING: braces {} are not necessary for single statement blocks
#66: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:66:
+		if (ufm_svn < active_svn) {
+			status = set_ufm_svn(manifest, SVN_POLICY_FOR_PCH_FW_UPDATE, active_svn);
+		}

WARNING: braces {} are not necessary for single statement blocks
#76: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:76:
+		if (ufm_svn < active_svn) {
+			status = set_ufm_svn(manifest, SVN_POLICY_FOR_BMC_FW_UPDATE, active_svn);
+		}

WARNING: braces {} are not necessary for single statement blocks
#117: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:117:
+		if (ufm_svn < recovery_svn) {
+			status = set_ufm_svn(manifest, SVN_POLICY_FOR_PCH_FW_UPDATE, recovery_svn);
+		}

WARNING: braces {} are not necessary for single statement blocks
#126: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:126:
+		if (ufm_svn < recovery_svn) {
+			status = set_ufm_svn(manifest, SVN_POLICY_FOR_BMC_FW_UPDATE, recovery_svn);
+		}

WARNING: braces {} are not necessary for single statement blocks
#186: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:186:
+		if (status != Success) {
+			return Failure;
+
+		}

WARNING: space prohibited between function name and open parenthesis '('
#197: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:197:
+int get_fvm_start_address (struct pfr_manifest *manifest, uint32_t *fvm_address)

WARNING: braces {} are not necessary for any arm of this statement
#237: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:237:
+		if (status == manifest_failure) {
[...]
+		} else if (status == manifest_unsupported) {
[...]

WARNING: braces {} are not necessary for single statement blocks
#243: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:243:
+		if (pfm_definition.FVType == fv_type) {
+			return pfm_definition.FVMAddress;
+		}

WARNING: braces {} are not necessary for single statement blocks
#257: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:257:
+		if (p_spi_definition->PFMDefinitionType == pfm_definition) {
+			status = pfr_spi_read(manifest->image_type, address, SHA256_SIZE, pfm_spi_hash);
+		}

WARNING: braces {} are not necessary for single statement blocks
#263: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:263:
+		if (p_spi_definition->PFMDefinitionType == pfm_definition) {
+			status = pfr_spi_read(manifest->image_type, address, SHA384_SIZE, pfm_spi_hash);
+		}

WARNING: else is not generally useful after a break or return
#280: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:280:
+			return;
+		} else {

WARNING: braces {} are not necessary for any arm of this statement
#281: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:281:
+			if (spi_definition->ProtectLevelMask.RecoverOnFirstRecovery == 1) {
[...]
+			} else if (spi_definition->ProtectLevelMask.RecoverOnSecondRecovery == 1) {
[...]
+			} else if (spi_definition->ProtectLevelMask.RecoverOnThirdRecovery == 1) {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#288: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:288:
+			if (pch_protect_level_mask_count.Count != 0 && pch_protect_level_mask_count.Count > local_count) {
[...]
+			} else if (pch_protect_level_mask_count.Count == 0) {
[...]

WARNING: else is not generally useful after a break or return
#298: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:298:
+			return;
+		} else {

WARNING: braces {} are not necessary for any arm of this statement
#299: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:299:
+			if (spi_definition->ProtectLevelMask.RecoverOnFirstRecovery == 1) {
[...]
+			} else if (spi_definition->ProtectLevelMask.RecoverOnSecondRecovery == 1) {
[...]
+			} else if (spi_definition->ProtectLevelMask.RecoverOnThirdRecovery == 1) {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#306: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:306:
+			if (bmc_protect_level_mask_count.Count != 0 && bmc_protect_level_mask_count.Count > local_count) {
[...]
+			} else if (bmc_protect_level_mask_count.Count == 0) {
[...]

WARNING: Missing a blank line after declarations
#326: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:326:
+		PFM_STRUCTURE_1 pfm_data;
+		if (manifest->image_type == PCH_TYPE) {

WARNING: braces {} are not necessary for any arm of this statement
#326: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:326:
+		if (manifest->image_type == PCH_TYPE) {
[...]
+		} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#333: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:333:
+		if (status != Success) {
+			return manifest_failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#343: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:343:
+	if (status != Success) {
+		return manifest_failure;
+	}

WARNING: braces {} are not necessary for single statement blocks
#352: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:352:
+			if (status != Success) {
+				return manifest_failure;
+			}

WARNING: braces {} are not necessary for single statement blocks
#362: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:362:
+		if (status != Success) {
+			return manifest_failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#374: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:374:
+			if (status != Success) {
+				return manifest_failure;
+			}

WARNING: braces {} are not necessary for single statement blocks
#384: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:384:
+	if (pfm_definition_type != pfm_definition) {
+		return manifest_unsupported;
+	}

WARNING: please, no spaces at the start of a line
#404: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:404:
+    for (position = 0; position <= g_pfm_manifest_length - 1; region_count++) {$

WARNING: suspect code indent for conditional statements (4, 16)
#404: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:404:
+    for (position = 0; position <= g_pfm_manifest_length - 1; region_count++) {
+		verify_status = get_pfm_manifest_data(manifest, &position, (void *)&pfm_spi_definition, (uint8_t *)&pfm_spi_hash, pfm_definition_type);

WARNING: braces {} are not necessary for any arm of this statement
#428: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:428:
+	if (manifest->image_type == PCH_TYPE) {
[...]
+	} else {
[...]

WARNING: Missing a blank line after declarations
#447: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:447:
+		FVM_STRUCTURE fvm_data;
+		manifest_start_address = p_fvm_address_definition->FVMAddress + PFM_SIG_BLOCK_SIZE;

WARNING: braces {} are not necessary for single statement blocks
#450: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:450:
+		if (status != Success) {
+			return manifest_failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#461: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:461:
+		if (fvm_data.FvType != p_fvm_address_definition->FVType) {
+			return manifest_failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#470: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:470:
+	if (status != Success) {
+		return manifest_failure;
+	}

WARNING: braces {} are not necessary for single statement blocks
#477: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:477:
+		if (status != Success) {
+			return manifest_failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#489: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:489:
+			if (status != Success) {
+				return manifest_failure;
+			}

WARNING: braces {} are not necessary for single statement blocks
#499: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c:499:
+	if (fvm_def_type != fvm_definition_type) {
+		return manifest_unsupported;
+	}

total: 0 errors, 44 warnings, 504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for single statement blocks
#48: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:48:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: braces {} are not necessary for any arm of this statement
#52: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:52:
+	if (manifest->image_type == BMC_TYPE) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#73: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:73:
+	if (image_type == BMC_TYPE) {
+		area_size = BMC_STAGING_SIZE;
+	}

WARNING: braces {} are not necessary for single statement blocks
#76: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:76:
+	if (image_type == PCH_TYPE) {
+		area_size = PCH_STAGING_SIZE;
+	}

WARNING: please, no spaces at the start of a line
#80: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:80:
+    spi_flash->spi.device_id[0] = image_type; // assign the flash device id,  0:spi1_cs0, 1:spi2_cs0 , 2:spi2_cs1, 3:spi2_cs2, 4:fmc_cs0, 5:fmc_cs1$

WARNING: please, no spaces at the start of a line
#84: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:84:
+    DEBUG_PRINTF("Recovering...");$

WARNING: please, no spaces at the start of a line
#87: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:87:
+    status = flash_copy_ext_and_verify(&spi_flash->spi, target_address, &spi_flash_sec->spi, source_address, area_size);$

WARNING: please, no spaces at the start of a line
#89: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:89:
+    status = flash_copy_and_verify(&spi_flash->spi, target_address, source_address, area_size);$

WARNING: please, no spaces at the start of a line
#94: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:94:
+    }$

WARNING: braces {} are not necessary for single statement blocks
#114: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:114:
+		if (status != Success) {
+			return status;
+		}

WARNING: braces {} are not necessary for single statement blocks
#120: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:120:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for any arm of this statement
#157: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:157:
+		if (manifest->state == RECOVERY) {
[...]
+		} else {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#171: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:171:
+		if (manifest->state == RECOVERY) {
[...]
+		} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#177: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:177:
+		if (status != Success) {
+			return status;
+		}

WARNING: Missing a blank line after declarations
#188: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:188:
+	struct SpiEngine *spi_flash = getSpiEngineWrapper();
+	spi_flash->spi.device_id[0] = manifest->image_type; // assign the flash device id,  0:spi1_cs0, 1:spi2_cs0 , 2:spi2_cs1, 3:spi2_cs2, 4:fmc_cs0, 5:fmc_cs1

WARNING: braces {} are not necessary for single statement blocks
#192: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:192:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: Missing a blank line after declarations
#225: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:225:
+	uint32_t image_type = manifest->image_type;
+	manifest->image_type = BMC_TYPE;

WARNING: braces {} are not necessary for single statement blocks
#243: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:243:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#246: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:246:
+	printk("BMC PCH Staging verification successful\r\n");

WARNING: braces {} are not necessary for single statement blocks
#255: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:255:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: please, no spaces at the start of a line
#282: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c:282:
+    return Success;$

total: 0 errors, 29 warnings, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for any arm of this statement
#46: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:46:
+	if (manifest->image_type == BMC_TYPE) {
[...]
+	} else if (manifest->image_type == PCH_TYPE) {
[...]

WARNING: braces {} are not necessary for single statement blocks
#63: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:63:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: braces {} are not necessary for single statement blocks
#98: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c:98:
+	if (status != Success) {
+		return Failure;
+	}

total: 0 errors, 11 warnings, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_authentication.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:8:
+//***********************************************************************//
+

WARNING: do not add new typedefs
#167: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:167:
+typedef struct {

WARNING: do not add new typedefs
#172: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h:172:
+typedef struct {

total: 0 errors, 10 warnings, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_definitions.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:8:
+//***********************************************************************//
+

WARNING: externs should be avoided in .c files
#28: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:28:
+extern EVENT_CONTEXT DataContext;

WARNING: braces {} are not necessary for single statement blocks
#40: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:40:
+		if (status != Success) {
+			return status;
+		}

WARNING: braces {} are not necessary for single statement blocks
#45: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:45:
+		if (status != Success) {
+			return status;
+		}

WARNING: braces {} are not necessary for single statement blocks
#54: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:54:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#59: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:59:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for any arm of this statement
#80: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:80:
+	if (manifest->image_type == BMC_TYPE) {
[...]
+	} else if (manifest->image_type == PCH_TYPE) {
[...]

WARNING: braces {} are not necessary for single statement blocks
#126: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:126:
+	for (index = 0; index < offset; index++) {
+		svn_buffer[index] = 0x00;
+	}

WARNING: braces {} are not necessary for single statement blocks
#150: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:150:
+			if (/*!*/ ((svn_buffer[index1] >> index2) & mask)) {
+				return svn_number;
+			}

WARNING: braces {} are not necessary for single statement blocks
#204: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:204:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: Missing a blank line after declarations
#250: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:250:
+	uint8_t current_svn;
+	current_svn = get_ufm_svn(manifest, SVN_POLICY_FOR_CPLD_UPDATE);

WARNING: else is not generally useful after a break or return
#258: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:258:
+		return Failure;
+	} else {

WARNING: braces {} are not necessary for single statement blocks
#306: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:306:
+		if (status == Success) {
+			DEBUG_PRINTF("Key cancellation success. Key Id :%d was cancelled\r\n", cancelled_id);
+		}

WARNING: Missing a blank line after declarations
#314: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:314:
+		uint32_t hrot_svn = 0;
+		status = pfr_spi_read(manifest->image_type, payload_address, sizeof(uint32_t), &hrot_svn);

WARNING: else is not generally useful after a break or return
#357: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:357:
+		return Failure;
+	} else {

WARNING: braces {} are not necessary for any arm of this statement
#359: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:359:
+		if (manifest->image_type == PCH_TYPE) {
[...]
+		} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#438: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:438:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: braces {} are not necessary for single statement blocks
#446: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:446:
+	if (pc_type_status ==  KEY_CANCELLATION_CAPSULE) {
+		return hrot_update(pfr_manifest);
+	}

WARNING: braces {} are not necessary for any arm of this statement
#466: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:466:
+	if (pfr_manifest->image_type ==  BMC_TYPE) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#507: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:507:
+		if (status != Success) {
+			return status;
+		}

WARNING: braces {} are not necessary for single statement blocks
#525: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:525:
+		if (region.Region[0].ActiveRegion == 1) {
+			DataContext.flash = PRIMARY_FLASH_REGION;
+		}

WARNING: braces {} are not necessary for single statement blocks
#528: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:528:
+		if (region.Region[0].Recoveryregion == 1 && region.Region[0].ActiveRegion == 0) {
+			DataContext.flash = SECONDARY_FLASH_REGION;
+		}

WARNING: braces {} are not necessary for single statement blocks
#537: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:537:
+		if (region.Region[1].Recoveryregion == 1 && region.Region[1].ActiveRegion == 0) {
+			DataContext.flash = SECONDARY_FLASH_REGION;
+		}

WARNING: braces {} are not necessary for single statement blocks
#546: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:546:
+		if (region.Region[2].Recoveryregion == 1 && region.Region[2].ActiveRegion == 0) {
+			DataContext.flash = SECONDARY_FLASH_REGION;
+		}

WARNING: Consider removing the code enclosed by this #if 0 and its #endif
#554: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:554:
+#if 0

WARNING: printk() should include KERN_<LEVEL> facility level
#556: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:556:
+		printk("Watchdog timer BMC TYPE\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#558: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c:558:
+		printk("Watchdog timer PCH TYPE\r\n");

total: 0 errors, 34 warnings, 645 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_update.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 20 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_recovery.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for single statement blocks
#62: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:62:
+		if (status != Success) {
+			return Failure;
+		}

WARNING: suspect code indent for conditional statements (8, 17)
#90: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:90:
+	if (!ufm_offset)
+		 return Failure;

WARNING: Statements should start on a tabstop
#91: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c:91:
+		 return Failure;

total: 0 errors, 11 warnings, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_key_cancellation.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for any arm of this statement
#83: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:83:
+	if (manifest->kc_flag == 0) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#100: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:100:
+	if (block1_buffer->Block0SignatureMagic == SIGNATURE_SECP256_TAG) {
[...]
+	} else if (block1_buffer->Block0SignatureMagic == SIGNATURE_SECP384_TAG) {
[...]

WARNING: braces {} are not necessary for single statement blocks
#129: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:129:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: braces {} are not necessary for any arm of this statement
#169: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:169:
+	if (block1_buffer->CskSignatureMagic == SIGNATURE_SECP256_TAG) {
[...]
+	} else if (block1_buffer->CskSignatureMagic == SIGNATURE_SECP384_TAG) {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#182: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:182:
+	if (block1_buffer->CskEntryInitial.PubCurveMagic == PUBLIC_SECP256_TAG) {
[...]
+	} else if (block1_buffer->CskEntryInitial.PubCurveMagic == PUBLIC_SECP384_TAG) {
[...]

WARNING: Missing a blank line after declarations
#210: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:210:
+	uint32_t hash_length = 0;
+	manifest->pfr_hash->start_address = block1_address + CSK_START_ADDRESS + sizeof(block1_buffer->CskEntryInitial.Tag);

WARNING: Missing a blank line after declarations
#353: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:353:
+	uint8_t *ptr_sha;
+	memset(sha_buffer, 0x00, sizeof(sha_buffer));

WARNING: braces {} are not necessary for single statement blocks
#382: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c:382:
+	if (pc_type_status == PFR_CPLD_UPDATE_CAPSULE) {
+		SetCpldFpgaRotHash(&sha_buffer[0]);
+	}

total: 0 errors, 16 warnings, 398 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_verification.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h:8:
+//***********************************************************************//
+

total: 0 errors, 8 warnings, 14 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pbc.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:8:
+//***********************************************************************//
+

WARNING: braces {} are not necessary for any arm of this statement
#34: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:34:
+	if (manifest->hash_curve == secp256r1) {
[...]
+	} else if (manifest->hash_curve == secp384r1) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for any arm of this statement
#69: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:69:
+	if (manifest->hash_curve == secp256r1) {
[...]
+	} else if (manifest->hash_curve == secp384r1) {
[...]
+	} else {
[...]

WARNING: braces {} are not necessary for single statement blocks
#92: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:92:
+	if (status != Success) {
+		return Failure;
+	}

WARNING: braces {} are not necessary for any arm of this statement
#113: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:113:
+	if (block1_buffer->RootEntry.PubCurveMagic == PUBLIC_SECP256_TAG) {
[...]
+	} else if (block1_buffer->RootEntry.PubCurveMagic == PUBLIC_SECP384_TAG) {
[...]

WARNING: braces {} are not necessary for single statement blocks
#132: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c:132:
+	if (status != Success) {
+		return Failure;
+	}

total: 0 errors, 13 warnings, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_provision.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:8:
+//***********************************************************************//
+

WARNING: do not add new typedefs
#18: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:18:
+typedef struct PFMSPIDEFINITION {

WARNING: do not add new typedefs
#38: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:38:
+typedef enum {

WARNING: do not add new typedefs
#44: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:44:
+typedef struct _PFM_SPI_REGION {

WARNING: do not add new typedefs
#59: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:59:
+typedef struct _PFM_STRUCTURE_1 {

WARNING: do not add new typedefs
#69: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:69:
+typedef struct _FVM_STRUCTURE {

WARNING: do not add new typedefs
#80: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:80:
+typedef struct _PFM_SMBUS_RULE {

WARNING: do not add new typedefs
#89: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:89:
+typedef struct _PFM_FVM_ADDRESS_DEFINITION {

WARNING: do not add new typedefs
#96: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:96:
+typedef struct _FVM_CAPABILITIES {

WARNING: do not add new typedefs
#129: FILE: ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h:129:
+typedef struct {

total: 0 errors, 17 warnings, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/intel_pfr/intel_pfr_pfm_manifest.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h:7:
+//*                                                                     *//
+//***********************************************************************//

total: 0 errors, 7 warnings, 7 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:8:
+//***********************************************************************//
+

WARNING: externs should be avoided in .c files
#16: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:16:
+extern uint8_t gBmcFlag;

WARNING: printk() should include KERN_<LEVEL> facility level
#29: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:29:
+	printk("i2c_1060_slave_cb1_write_requested write_requested\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#48: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:48:
+	printk("i2c_1060_slave_cb1_read_requested read_requested *val = %x\n", *val);

WARNING: printk() should include KERN_<LEVEL> facility level
#64: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:64:
+	printk("i2c_1060_slave_cb1_write_received write_received val = %x\n", val);

WARNING: printk() should include KERN_<LEVEL> facility level
#92: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:92:
+	printk("i2c_1060_slave_cb1_read_processed read_processed *val = %x\n", val);

WARNING: printk() should include KERN_<LEVEL> facility level
#105: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c:105:
+	printk("i2c_1060_slave_cb1_stop stop\n");

total: 0 errors, 14 warnings, 118 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/I2c_Handler/PchI2C_handler.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h:7:
+//*                                                                     *//
+//***********************************************************************//

total: 0 errors, 7 warnings, 7 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/I2c_Handler/PchI2c_handler.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:1:
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#2: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:2:
+//***********************************************************************//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#3: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:3:
+//*                                                                     *//
+//*                      Copyright © 2022 AMI                           *//

WARNING: Block comments use * on subsequent lines
#4: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:4:
+//*                      Copyright © 2022 AMI                           *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#5: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:5:
+//*                                                                     *//
+//*        All rights reserved. Subject to AMI licensing agreement.     *//

WARNING: Block comments use * on subsequent lines
#6: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:6:
+//*        All rights reserved. Subject to AMI licensing agreement.     *//
+//*                                                                     *//

WARNING: Block comments use * on subsequent lines
#7: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:7:
+//*                                                                     *//
+//***********************************************************************//

WARNING: Block comments use * on subsequent lines
#8: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:8:
+//***********************************************************************//
+

WARNING: externs should be avoided in .c files
#17: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:17:
+extern uint8_t gBmcFlag;

WARNING: externs should be avoided in .c files
#18: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:18:
+extern uint8_t gProvisinDoneFlag;

WARNING: unnecessary whitespace before a quoted newline
#68: FILE: ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c:68:
+		// printk("read command:%x, return value:%x \n", gI2cSlaveProcess.DataBuf[0], *val);

total: 0 errors, 11 warnings, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/src/I2c_Handler/BmcI2C_handler.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: ApplicationLayer/tektagon/sample.yaml:1:
+sample:

total: 0 errors, 1 warnings, 5 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

ApplicationLayer/tektagon/sample.yaml has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 14 lines checked

ApplicationLayer/tektagon/boards/ast1060_evb.conf has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 382 lines checked

ApplicationLayer/tektagon/boards/ast1060_evb.overlay has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 36 lines checked

ApplicationLayer/tektagon/prj.conf has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

HardwareAbstraction/smf/.git has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 5 lines checked

HardwareAbstraction/smf/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/smf/smf.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: HardwareAbstraction/smf/smf.h:4:
+ * SPDX-License-Identifier: Apache-2.0

total: 0 errors, 2 warnings, 154 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/smf/smf.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 11 lines checked

HardwareAbstraction/smf/CMakeLists.txt has no obvious style problems and is ready for submission.
WARNING: please write a paragraph that describes the config symbol fully
#4: FILE: HardwareAbstraction/smf/Kconfig:4:
+config SMF

WARNING: please write a paragraph that describes the config symbol fully
#11: FILE: HardwareAbstraction/smf/Kconfig:11:
+config SMF_ANCESTOR_SUPPORT

total: 0 errors, 2 warnings, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/smf/Kconfig has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/smf/smf.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: HardwareAbstraction/smf/smf.c:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: braces {} are not necessary for single statement blocks
#29: FILE: HardwareAbstraction/smf/smf.c:29:
+		if (target_state == state) {
+			return true;
+		}

WARNING: braces {} are not necessary for single statement blocks
#41: FILE: HardwareAbstraction/smf/smf.c:41:
+	if (!ctx->previous) {
+		return false;
+	}

WARNING: braces {} are not necessary for single statement blocks
#52: FILE: HardwareAbstraction/smf/smf.c:52:
+		if (tmp->parent == parent) {
+			return tmp;
+		}

WARNING: braces {} are not necessary for single statement blocks
#56: FILE: HardwareAbstraction/smf/smf.c:56:
+		if (tmp->parent == NULL) {
+			return NULL;
+		}

WARNING: braces {} are not necessary for single statement blocks
#89: FILE: HardwareAbstraction/smf/smf.c:89:
+			if (internal->terminate) {
+				return true;
+			}

WARNING: braces {} are not necessary for single statement blocks
#118: FILE: HardwareAbstraction/smf/smf.c:118:
+	if (internal->terminate) {
+		return true;
+	}

WARNING: braces {} are not necessary for single statement blocks
#130: FILE: HardwareAbstraction/smf/smf.c:130:
+			if (internal->terminate) {
+				return true;
+			}

WARNING: braces {} are not necessary for single statement blocks
#134: FILE: HardwareAbstraction/smf/smf.c:134:
+			if (internal->new_state) {
+				break;
+			}

WARNING: braces {} are not necessary for single statement blocks
#167: FILE: HardwareAbstraction/smf/smf.c:167:
+			if (internal->terminate) {
+				return true;
+			}

WARNING: braces {} are not necessary for single statement blocks
#188: FILE: HardwareAbstraction/smf/smf.c:188:
+		if (smf_execute_ancestor_entry_actions(ctx, init_state)) {
+			return;
+		}

WARNING: braces {} are not necessary for single statement blocks
#194: FILE: HardwareAbstraction/smf/smf.c:194:
+	if (init_state->entry) {
+		init_state->entry(ctx);
+	}

WARNING: braces {} are not necessary for single statement blocks
#223: FILE: HardwareAbstraction/smf/smf.c:223:
+		if (internal->terminate) {
+			return;
+		}

WARNING: braces {} are not necessary for single statement blocks
#231: FILE: HardwareAbstraction/smf/smf.c:231:
+		if (smf_execute_ancestor_exit_actions(ctx, target)) {
+			return;
+		}

WARNING: braces {} are not necessary for single statement blocks
#243: FILE: HardwareAbstraction/smf/smf.c:243:
+		if (smf_execute_ancestor_entry_actions(ctx, target)) {
+			return;
+		}

WARNING: braces {} are not necessary for single statement blocks
#271: FILE: HardwareAbstraction/smf/smf.c:271:
+	if (internal->terminate) {
+		return ctx->terminate_val;
+	}

WARNING: braces {} are not necessary for single statement blocks
#275: FILE: HardwareAbstraction/smf/smf.c:275:
+	if (ctx->current->run) {
+		ctx->current->run(ctx);
+	}

WARNING: braces {} are not necessary for single statement blocks
#280: FILE: HardwareAbstraction/smf/smf.c:280:
+		if (smf_execute_ancestor_run_actions(ctx)) {
+			return ctx->terminate_val;
+		}

total: 0 errors, 19 warnings, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/smf/smf.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 175 lines checked

HardwareAbstraction/README_HardwareAbstraction.md has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 32 lines checked

HardwareAbstraction/HardwareAbstraction.cmake has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 2 lines checked

HardwareAbstraction/CMakeLists.txt has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 4 lines checked

HardwareAbstraction/Kconfig has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

HardwareAbstraction/Hal/.git has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

HardwareAbstraction/Hal/Spi/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Spi/Spi.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#43: FILE: HardwareAbstraction/Hal/Spi/Spi.c:43:
+	if (Spi == NULL) {
+		return SPI_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 53 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Spi/Spi.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Spi/Spi.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#32: FILE: HardwareAbstraction/Hal/Spi/Spi.h:32:
+	int (*SpiRead) ();

WARNING: Unnecessary space before function pointer arguments
#41: FILE: HardwareAbstraction/Hal/Spi/Spi.h:41:
+	int (*SpiWrite) ();

WARNING: Unnecessary space before function pointer arguments
#49: FILE: HardwareAbstraction/Hal/Spi/Spi.h:49:
+	int (*SpiErase) ();

WARNING: Unnecessary space before function pointer arguments
#58: FILE: HardwareAbstraction/Hal/Spi/Spi.h:58:
+	int (*SpiDmaRead) ();

total: 0 errors, 5 warnings, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Spi/Spi.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/I2c/I2c.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/I2c/I2c.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/I2c/I2c.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#39: FILE: HardwareAbstraction/Hal/I2c/I2c.c:39:
+	if (I2cSlaveEngine == NULL) {
+		return I2C_SLAVE_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 48 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/I2c/I2c.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/I2c/I2cMaster.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#76: FILE: HardwareAbstraction/Hal/I2c/I2cMaster.c:76:
+	if (I2cMasterEngine == NULL) {
+		return I2C_MASTER_INVALID_ARGUMENT;
+	}

WARNING: adding a line without newline at end of file
#87: FILE: HardwareAbstraction/Hal/I2c/I2cMaster.c:87:
+}

total: 0 errors, 3 warnings, 87 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/I2c/I2cMaster.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Logging/Logging.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#40: FILE: HardwareAbstraction/Hal/Logging/Logging.c:40:
+	if (Logging == NULL) {
+		return -1;      // empty logging argument
+	}

WARNING: braces {} are not necessary for single statement blocks
#45: FILE: HardwareAbstraction/Hal/Logging/Logging.c:45:
+	if (status != 0) {
+		return status;
+	}

WARNING: Block comments use a trailing */ on a separate line
#49: FILE: HardwareAbstraction/Hal/Logging/Logging.c:49:
+	 * spi variable is unused argument in flash_wrapper_init function. */

WARNING: braces {} are not necessary for single statement blocks
#52: FILE: HardwareAbstraction/Hal/Logging/Logging.c:52:
+	if (status != 0) {
+		return status;  // failed to flash wrapper initialization
+	}

WARNING: Consider removing the code enclosed by this #if 0 and its #endif
#58: FILE: HardwareAbstraction/Hal/Logging/Logging.c:58:
+#if 0

WARNING: braces {} are not necessary for single statement blocks
#64: FILE: HardwareAbstraction/Hal/Logging/Logging.c:64:
+	if (status != 0) {
+		return status;  // failed to retrieves flash device size
+	}

WARNING: braces {} are not necessary for single statement blocks
#69: FILE: HardwareAbstraction/Hal/Logging/Logging.c:69:
+	if (status != 0) {
+		return status;  // failed to initializes logging flash
+	}

total: 0 errors, 8 warnings, 90 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Logging/Logging.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Logging/Logging.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Logging/Logging.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#32: FILE: HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.c:32:
+	if (SmbusFilter == NULL) {
+		return SMBUSFILTER_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#29: FILE: HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.h:29:
+	int (*SmbusFilterEnable) ();

WARNING: Unnecessary space before function pointer arguments
#38: FILE: HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.h:38:
+	int (*SmbusFilterDisable) ();

total: 0 errors, 3 warnings, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/SmbusFilter/SmbusFilter.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/SpiFilter/SpiFilter.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 31 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/SpiFilter/SpiFilter.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/SpiFilter/SpiFilter.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#396: FILE: HardwareAbstraction/Hal/SpiFilter/SpiFilter.c:396:
+	if (SpiFilter == NULL) {
+		return SPI_FILTER_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/SpiFilter/SpiFilter.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Smbus/Smbus.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#31: FILE: HardwareAbstraction/Hal/Smbus/Smbus.h:31:
+	int (*SmbusRead) ();

WARNING: Unnecessary space before function pointer arguments
#40: FILE: HardwareAbstraction/Hal/Smbus/Smbus.h:40:
+	int (*SmbusWrite) ();

total: 0 errors, 3 warnings, 51 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Smbus/Smbus.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Smbus/Smbus.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#35: FILE: HardwareAbstraction/Hal/Smbus/Smbus.c:35:
+	if (Smbus == NULL) {
+		return SMBUS_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Smbus/Smbus.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Crypto/Rsa.h:1:
+// ***********************************************************************

WARNING: adding a line without newline at end of file
#15: FILE: HardwareAbstraction/Hal/Crypto/Rsa.h:15:
+		 const uint8_t *Signature, size_t SigLength, const uint8_t *Match, size_t MatchLength);

total: 0 errors, 2 warnings, 15 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Crypto/Rsa.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Crypto/Hash.c:1:
+// ***********************************************************************

WARNING: Statements terminations use 1 semicolon
#29: FILE: HardwareAbstraction/Hal/Crypto/Hash.c:29:
+	return HashEngineCalculateSha384(Data, Length, Hash, HashLength);;

WARNING: braces {} are not necessary for single statement blocks
#61: FILE: HardwareAbstraction/Hal/Crypto/Hash.c:61:
+	if (Engine == NULL) {
+		return HASH_ENGINE_INVALID_ARGUMENT;
+	}

total: 0 errors, 3 warnings, 76 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Crypto/Hash.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Crypto/Hash.h:1:
+// ***********************************************************************

WARNING: adding a line without newline at end of file
#17: FILE: HardwareAbstraction/Hal/Crypto/Hash.h:17:
+int HashInitialize(struct hash_engine *Engine);

total: 0 errors, 2 warnings, 17 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Crypto/Hash.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'RsaGenerateKey', this function's name, in a string
#18: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:18:
+	printf("RsaGenerateKey\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaInitPrivateKey', this function's name, in a string
#26: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:26:
+	printf("RsaInitPrivateKey\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaInitPublicKey', this function's name, in a string
#34: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:34:
+	printf("RsaInitPublicKey\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaGetPublicKeyDer', this function's name, in a string
#57: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:57:
+	printf("RsaGetPublicKeyDer\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaDecrypt', this function's name, in a string
#66: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:66:
+	printf("RsaDecrypt\r\n");

WARNING: braces {} are not necessary for single statement blocks
#89: FILE: HardwareAbstraction/Hal/Crypto/Rsa.c:89:
+	if (Engine == NULL) {
+		return RSA_ENGINE_INVALID_ARGUMENT;
+	}

total: 0 errors, 7 warnings, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Crypto/Rsa.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

HardwareAbstraction/Hal/Timer/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Timer/Timer.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#35: FILE: HardwareAbstraction/Hal/Timer/Timer.c:35:
+	if (Timer == NULL) {
+		return TIMER_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Timer/Timer.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Timer/Timer.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#31: FILE: HardwareAbstraction/Hal/Timer/Timer.h:31:
+	int (*BasicTimerStart) ();

WARNING: Unnecessary space before function pointer arguments
#40: FILE: HardwareAbstraction/Hal/Timer/Timer.h:40:
+	int (*BasicTimerStop) ();

total: 0 errors, 3 warnings, 51 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Timer/Timer.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Gpio/Gpio.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#31: FILE: HardwareAbstraction/Hal/Gpio/Gpio.h:31:
+	int (*GpioSet) ();

WARNING: Unnecessary space before function pointer arguments
#41: FILE: HardwareAbstraction/Hal/Gpio/Gpio.h:41:
+	int (*GpioGet) ();

WARNING: Unnecessary space before function pointer arguments
#50: FILE: HardwareAbstraction/Hal/Gpio/Gpio.h:50:
+	int (*SysReset) ();

total: 0 errors, 4 warnings, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Gpio/Gpio.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Gpio/Gpio.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#43: FILE: HardwareAbstraction/Hal/Gpio/Gpio.c:43:
+	if (Gpio == NULL) {
+		return GPIO_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 54 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Gpio/Gpio.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Watchdog/Watchdog.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#35: FILE: HardwareAbstraction/Hal/Watchdog/Watchdog.c:35:
+	if (Watchdog == NULL) {
+		return WATCHDOG_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 45 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Watchdog/Watchdog.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Watchdog/Watchdog.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#31: FILE: HardwareAbstraction/Hal/Watchdog/Watchdog.h:31:
+	int (*WatchdogFeed) ();

WARNING: Unnecessary space before function pointer arguments
#40: FILE: HardwareAbstraction/Hal/Watchdog/Watchdog.h:40:
+	int (*WatchdogDisable) ();

total: 0 errors, 3 warnings, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Watchdog/Watchdog.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

HardwareAbstraction/Hal/Interrupt/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Interrupt/Interrupt.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#30: FILE: HardwareAbstraction/Hal/Interrupt/Interrupt.c:30:
+	if (Interrupt == NULL) {
+		return INTERRUPT_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 39 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Interrupt/Interrupt.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Interrupt/Interrupt.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#30: FILE: HardwareAbstraction/Hal/Interrupt/Interrupt.h:30:
+	int (*TimerInterrupt) ();

total: 0 errors, 2 warnings, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Interrupt/Interrupt.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/I2cFilter/I2cFilter.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 21 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/I2cFilter/I2cFilter.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/I2cFilter/I2cFilter.c:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/I2cFilter/I2cFilter.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 29 lines checked

HardwareAbstraction/Hal/CMakeLists.txt has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Dice/Dice.h:1:
+// ***********************************************************************

WARNING: Unnecessary space before function pointer arguments
#31: FILE: HardwareAbstraction/Hal/Dice/Dice.h:31:
+	int (*DiceStatus) ();

total: 0 errors, 2 warnings, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Dice/Dice.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/Dice/Dice.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#28: FILE: HardwareAbstraction/Hal/Dice/Dice.c:28:
+	if (Dice == NULL) {
+		return DICE_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 37 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/Dice/Dice.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/CommonFlash/CommonFlash.h:1:
+// ***********************************************************************

WARNING: Macros with flow control statements should be avoided
#33: FILE: HardwareAbstraction/Hal/CommonFlash/CommonFlash.h:33:
+#define SPI_FLASH_BOUNDS_CHECK(bytes, addr, len)	\
+do {												\
+	if (addr >= bytes) {							\
+		return SPI_FLASH_ADDRESS_OUT_OF_RANGE;		\
+	}						 \
+							 \
+	if ((addr + len) > bytes) {			 \
+		return SPI_FLASH_OPERATION_OUT_OF_RANGE; \
+	} \
+} while (0)

total: 0 errors, 2 warnings, 46 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/CommonFlash/CommonFlash.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/CommonFlash/FlashMaster.c:1:
+#include "flash/flash_master.h"

total: 0 errors, 1 warnings, 37 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/CommonFlash/FlashMaster.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: HardwareAbstraction/Hal/CommonFlash/CommonFlash.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#215: FILE: HardwareAbstraction/Hal/CommonFlash/CommonFlash.c:215:
+	if ((Flash == NULL) || (Spi == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

total: 0 errors, 2 warnings, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

HardwareAbstraction/Hal/CommonFlash/CommonFlash.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

Wrapper/.git has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

Wrapper/AmiPfr/README.md has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 5 lines checked

Wrapper/README.md has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

Wrapper/BFR/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:1:
+// ***********************************************************************

WARNING: printk() should include KERN_<LEVEL> facility level
#31: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:31:
+		printk("%s\n", string);

WARNING: braces {} are not necessary for single statement blocks
#34: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:34:
+		if (!(i % 16)) {
+			printk("\n%04x ", i);
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#35: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:35:
+			printk("\n%04x ", i);

WARNING: printk() should include KERN_<LEVEL> facility level
#37: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:37:
+		printk("%02x ", i);

WARNING: braces {} are not necessary for single statement blocks
#41: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:41:
+		if (!(i % 16)) {
+			printk("\n%04x ", i);
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#42: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:42:
+			printk("\n%04x ", i);

WARNING: printk() should include KERN_<LEVEL> facility level
#44: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:44:
+		printk("%02x ", *((uint8_t *)(buf + i)));

WARNING: printk() should include KERN_<LEVEL> facility level
#47: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:47:
+	printk("\n");

WARNING: braces {} are not necessary for single statement blocks
#103: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:103:
+		if (debug_log_create_entry(1 % DEBUG_LOG_NUM_SEVERITY, (uint8_t)i, (uint8_t)i + 1, i, i + 1)) {
+			return (i << 16) | __LINE__;
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#106: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:106:
+	printk("Log size=%d\n", debug_log_get_size());// 1512 bytes = 54 logs, pass

WARNING: printk() should include KERN_<LEVEL> facility level
#109: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:109:
+	printk("Log size=%d\n", debug_log_get_size());// 1512 bytes = 54 logs, pass

WARNING: braces {} are not necessary for single statement blocks
#125: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:125:
+		if (debug_log_create_entry(1 % DEBUG_LOG_NUM_SEVERITY, (uint8_t)i, (uint8_t)i + 1, i, i + 1)) {
+			return (i << 16) | __LINE__;
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#129: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:129:
+	printk("Log size=%d\n", debug_log_get_size());// 4984 bytes = 4088 + 896, pass

WARNING: braces {} are not necessary for single statement blocks
#153: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:153:
+		if (debug_log_create_entry(1 % DEBUG_LOG_NUM_SEVERITY, (uint8_t)i, (uint8_t)i + 1, i, i + 1)) {
+			return (i << 16) | __LINE__;
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#160: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:160:
+	printk("Log size=%d\n", debug_log_get_size());// 9016 bytes, pass

WARNING: printk() should include KERN_<LEVEL> facility level
#171: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.c:171:
+	printk("Log size=%d\n", debug_log_get_size());          // "840 bytes" + "4088 bytes" = 4928 bytes(valid data), pass

total: 0 errors, 17 warnings, 183 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/Logging/LoggingWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.h:1:
+// ***********************************************************************

WARNING: adding a line without newline at end of file
#23: FILE: Wrapper/Tektagon-OE/Logging/LoggingWrapper.h:23:
+#endif /* LOGGING_WRAPPER_H_ */

total: 0 errors, 2 warnings, 23 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/Logging/LoggingWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/i2c_filter/I2cFilterWrapper.h:1:
+#include <i2c/i2c_filter.h>

WARNING: adding a line without newline at end of file
#6: FILE: Wrapper/Tektagon-OE/i2c_filter/I2cFilterWrapper.h:6:
+static int WrapperI2cFilterSet(struct i2c_filter_interface *filter, uint8_t index);

total: 0 errors, 2 warnings, 6 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/i2c_filter/I2cFilterWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/i2c_filter/I2cFilterWrapper.c:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 67 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/i2c_filter/I2cFilterWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/i2c/I2cWrapper.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#37: FILE: Wrapper/Tektagon-OE/i2c/I2cWrapper.c:37:
+	if (!dev) {
+		return I2C_SLAVE_NO_DEVICE;
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#40: FILE: Wrapper/Tektagon-OE/i2c/I2cWrapper.c:40:
+	printk("\r\n I2CSlave_wrapper_InitSlaveDev get device\r\n");

total: 0 errors, 3 warnings, 42 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/i2c/I2cWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/i2c/I2cWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 19 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/i2c/I2cWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/HashWrapper.c:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/HashWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 34 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/RsaWrapper.h:1:
+#include <crypto/rsa.h>

total: 0 errors, 1 warnings, 9 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/RsaWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#22: FILE: Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.c:22:
+	if (rsa == NULL) {
+		return SIG_VERIFICATION_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#41: FILE: Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.c:41:
+	if ((verification == NULL) || (rsa == NULL) || (key == NULL)) {
+		return SIG_VERIFICATION_INVALID_ARGUMENT;
+	}

total: 0 errors, 3 warnings, 62 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/SignatureVerificationRsaWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/HashWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 25 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/HashWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/crypto/RsaWrapper.c:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 70 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/crypto/RsaWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 36 lines checked

Wrapper/Tektagon-OE/CMakeLists.txt has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/WatchDog/WatchDog.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 16 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/WatchDog/WatchDog.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/WatchDog/WatchDog.c:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 51 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/WatchDog/WatchDog.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/Definition.h:1:
+//***********************************************************************

WARNING: Block comments use * on subsequent lines
#2: FILE: Wrapper/Tektagon-OE/Definition.h:2:
+//***********************************************************************
+//*                                                                     *

WARNING: Block comments use * on subsequent lines
#3: FILE: Wrapper/Tektagon-OE/Definition.h:3:
+//*                                                                     *
+//*                  Copyright (c) 1985-2022, AMI.                      *

WARNING: Block comments use * on subsequent lines
#4: FILE: Wrapper/Tektagon-OE/Definition.h:4:
+//*                  Copyright (c) 1985-2022, AMI.                      *
+//*                                                                     *

WARNING: Block comments use * on subsequent lines
#5: FILE: Wrapper/Tektagon-OE/Definition.h:5:
+//*                                                                     *
+//*      All rights reserved. Subject to AMI licensing agreement.       *

WARNING: Block comments use * on subsequent lines
#6: FILE: Wrapper/Tektagon-OE/Definition.h:6:
+//*      All rights reserved. Subject to AMI licensing agreement.       *
+//*                                                                     *

WARNING: Block comments use * on subsequent lines
#7: FILE: Wrapper/Tektagon-OE/Definition.h:7:
+//*                                                                     *
+//***********************************************************************

WARNING: Block comments use * on subsequent lines
#8: FILE: Wrapper/Tektagon-OE/Definition.h:8:
+//***********************************************************************
+/**@file

total: 0 errors, 8 warnings, 80 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/Definition.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/spi_filter/SpiFilterWrapper.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#150: FILE: Wrapper/Tektagon-OE/spi_filter/SpiFilterWrapper.c:150:
+	for (uint32_t i = 0; i < 4; i++) {
+		SPI_Monitor_Enable(spim_devs[i], Enable);
+	}

total: 0 errors, 2 warnings, 409 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/spi_filter/SpiFilterWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/spi_filter/SpiFilterWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/spi_filter/SpiFilterWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:1:
+// ***********************************************************************

WARNING: braces {} are not necessary for single statement blocks
#76: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:76:
+	if ((flash == NULL) || (bytes == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: Unnecessary parentheses - maybe == should be = ?
#115: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:115:
+	if ((flash == NULL)) {

WARNING: braces {} are not necessary for single statement blocks
#115: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:115:
+	if ((flash == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#139: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:139:
+	if ((flash == NULL) || (bytes == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: Block comments use a trailing */ on a separate line
#144: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:144:
+	 * the SFDP tables. */

WARNING: braces {} are not necessary for single statement blocks
#162: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:162:
+	if ((flash == NULL) || (bytes == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: Unnecessary parentheses - maybe == should be = ?
#191: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:191:
+	if ((flash == NULL)) {

WARNING: braces {} are not necessary for single statement blocks
#191: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:191:
+	if ((flash == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for any arm of this statement
#201: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:201:
+		if (page != FLASH_PAGE_BASE(end)) {
[...]
+		} else {
[...]

WARNING: printk() should include KERN_<LEVEL> facility level
#229: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:229:
+			printk("debug_log_create_entry\n");

WARNING: braces {} are not necessary for single statement blocks
#253: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:253:
+	if ((flash == NULL) || (bytes == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#279: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:279:
+	if (flash == NULL) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#302: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:302:
+	if ((flash == NULL) || (bytes == NULL)) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

WARNING: braces {} are not necessary for single statement blocks
#328: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.c:328:
+	if (flash == NULL) {
+		return SPI_FLASH_INVALID_ARGUMENT;
+	}

total: 0 errors, 15 warnings, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/flash/FlashWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/flash/FlashWrapper.h:1:
+

total: 0 errors, 1 warnings, 31 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/flash/FlashWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Tektagon-OE/flash/FlashMasterWrapper.c:1:
+#include "flash/flash_master.h"

total: 0 errors, 1 warnings, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Tektagon-OE/flash/FlashMasterWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

Wrapper/IntelPfr/README.md has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'SpiReadAccessHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c:19:
+	printf("SpiReadAccessHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SpiWriteAccessHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c:28:
+	printf("SpiWriteAccessHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SpiEraseAccessHook', this function's name, in a string
#37: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c:37:
+	printf("SpiEraseAccessHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SpiInitalization', this function's name, in a string
#46: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c:46:
+	printf("SpiInitalization\r\n");

total: 0 errors, 5 warnings, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 26 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Spi/SpiWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'FlashReadHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c:19:
+	printf("FlashReadHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'FlashWriteHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c:28:
+	printf("FlashWriteHook\r\n");

WARNING: Block comments use * on subsequent lines
#36: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c:36:
+/**
+   Function to wrap HashInit

WARNING: Prefer using '"%s...", __func__' to using 'FlashInitalization', this function's name, in a string
#45: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c:45:
+	printf("FlashInitalization\r\n");

total: 0 errors, 5 warnings, 48 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 23 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Flash/FlashWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/I2c/I2cWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'I2cInitalization', this function's name, in a string
#68: FILE: Wrapper/BareMetal/HardwareAbstraction/I2c/I2cWrapper.c:68:
+	printf("I2cInitalization\r\n");

total: 0 errors, 2 warnings, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/I2c/I2cWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/I2c/I2cWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 27 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/I2c/I2cWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/HalInitialization.c:1:
+///***********************************************************************

WARNING: Block comments use * on subsequent lines
#2: FILE: Wrapper/BareMetal/HardwareAbstraction/HalInitialization.c:2:
+///***********************************************************************
+// *                                                                     *

WARNING: Block comments use * on subsequent lines
#13: FILE: Wrapper/BareMetal/HardwareAbstraction/HalInitialization.c:13:
+/**
+   Function to wrap HalConfig

total: 0 errors, 3 warnings, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/HalInitialization.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'LoggingCreateEntry', this function's name, in a string
#24: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:24:
+	TRACE("LoggingCreateEntry\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'LoggingFlush', this function's name, in a string
#38: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:38:
+	TRACE("LoggingFlush\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'LoggingClear', this function's name, in a string
#51: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:51:
+	TRACE("LoggingClear\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'LoggingGetSize', this function's name, in a string
#65: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:65:
+	TRACE("LoggingGetSize\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'LoggingReadContents', this function's name, in a string
#82: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c:82:
+	TRACE("LoggingReadContents\r\n");

total: 0 errors, 6 warnings, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 31 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Logging/LoggingWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'SmbusFilterEnabledHook', this function's name, in a string
#16: FILE: Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.c:16:
+	printf("SmbusFilterEnabledHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SmbusFilterDisabledHook', this function's name, in a string
#25: FILE: Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.c:25:
+	printf("SmbusFilterDisabledHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SmbusFilterInitalization', this function's name, in a string
#34: FILE: Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.c:34:
+	printf("SmbusFilterInitalization\r\n");

total: 0 errors, 4 warnings, 37 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 23 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/SmbusFilter/SmbusFilterWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/SpiFilter/SpiFilterWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'SpiFilterInitalization', this function's name, in a string
#390: FILE: Wrapper/BareMetal/HardwareAbstraction/SpiFilter/SpiFilterWrapper.c:390:
+	printf("SpiFilterInitalization\r\n");

total: 0 errors, 2 warnings, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/SpiFilter/SpiFilterWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/SpiFilter/SpiFilterWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 48 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/SpiFilter/SpiFilterWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 24 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'SmbusReadAccessHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.c:19:
+	printf("SmbusReadAccessHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SmbusWriteAccessHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.c:28:
+	printf("SmbusWriteAccessHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SmbusInitalization', this function's name, in a string
#37: FILE: Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.c:37:
+	printf("SmbusInitalization\r\n");

total: 0 errors, 4 warnings, 40 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Smbus/SmbusWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineCalculateSha256', this function's name, in a string
#16: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:16:
+	TRACE("HashEngineCalculateSha256\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineStartSha256', this function's name, in a string
#25: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:25:
+	TRACE("HashEngineStartSha256\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineCalculateSha384', this function's name, in a string
#34: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:34:
+	TRACE("HashEngineCalculateSha384\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineStartSha384', this function's name, in a string
#42: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:42:
+	TRACE("HashEngineStartSha384\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineUpdate', this function's name, in a string
#50: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:50:
+	TRACE("HashEngineUpdate\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineFinish', this function's name, in a string
#59: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:59:
+	TRACE("HashEngineFinish\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'HashEngineCancel', this function's name, in a string
#67: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:67:
+	TRACE("HashEngineCancel\r\n");

WARNING: Block comments use * on subsequent lines
#72: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:72:
+/**
+   Function to wrap HashInit

WARNING: Prefer using '"%s...", __func__' to using 'HashInitialization', this function's name, in a string
#81: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c:81:
+	printf("HashInitialization\r\n");

total: 0 errors, 10 warnings, 84 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 30 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Crypto/HashWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'BasicTimerStartHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.c:19:
+	printf("BasicTimerStartHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'BasicTimerStopHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.c:28:
+	printf("BasicTimerStopHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'TimerInitialization', this function's name, in a string
#37: FILE: Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.c:37:
+	printf("TimerInitialization\r\n");

total: 0 errors, 4 warnings, 40 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Timer/TimerWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 25 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'GpioSetConfigurationHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c:19:
+	printf("GpioSetConfigurationHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'GpioGetConfigurationHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c:28:
+	printf("GpioGetConfigurationHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'SystemResetHook', this function's name, in a string
#37: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c:37:
+	printf("SystemResetHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'GpioInitalization', this function's name, in a string
#46: FILE: Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c:46:
+	printf("GpioInitalization\r\n");

total: 0 errors, 5 warnings, 49 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Gpio/GpioWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 24 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'WatchdogFeedHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.c:19:
+	printf("WatchdogFeedHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'WatchdogDisableHook', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.c:28:
+	printf("WatchdogDisableHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'WatchdogInitialization', this function's name, in a string
#37: FILE: Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.c:37:
+	printf("WatchdogInitialization\r\n");

total: 0 errors, 4 warnings, 40 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Watchdog/WatchdogWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.c:1:
+// ***********************************************************************

WARNING: Prefer using '"%s...", __func__' to using 'GetTimerInterruptHook', this function's name, in a string
#19: FILE: Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.c:19:
+	printf("GetTimerInterruptHook\r\n");

WARNING: Prefer using '"%s...", __func__' to using 'InterruptInitalization', this function's name, in a string
#28: FILE: Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.c:28:
+	printf("InterruptInitalization\r\n");

total: 0 errors, 3 warnings, 31 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Interrupt/InterruptWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 23 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.c:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#23: FILE: Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.c:23:
+/**
+   Function to wrap HashInit

WARNING: Prefer using '"%s...", __func__' to using 'DiceInitalization', this function's name, in a string
#32: FILE: Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.c:32:
+	printf("DiceInitalization\r\n");

total: 0 errors, 3 warnings, 36 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/Dice/DiceWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/HardwareAbstraction/HalInitialization.h:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#14: FILE: Wrapper/BareMetal/HardwareAbstraction/HalInitialization.h:14:
+/**
+   Function to wrap HalConfig

total: 0 errors, 2 warnings, 20 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/HardwareAbstraction/HalInitialization.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 20 lines checked

Wrapper/BareMetal/BaremetalWrapper.cmake has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#17: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:17:
+/**
+   Function to wrap Verify action handler

WARNING: Block comments use * on subsequent lines
#26: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:26:
+/**
+   Function to wrap rec action handler

WARNING: Block comments use * on subsequent lines
#35: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:35:
+/**
+   Function to wrap update action handler

WARNING: Block comments use * on subsequent lines
#44: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:44:
+/**
+   Function to wrap post verify success action

WARNING: Block comments use * on subsequent lines
#54: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:54:
+/**
+   Function to wrap post verify failure action

WARNING: Block comments use * on subsequent lines
#63: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:63:
+/**
+   Function to wrap post Rec success action

WARNING: Block comments use * on subsequent lines
#73: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:73:
+/**
+   Function to wrap post Rec failure action

WARNING: Block comments use * on subsequent lines
#82: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:82:
+/**
+   Function to wrap post update success action

WARNING: Block comments use * on subsequent lines
#92: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.h:92:
+/**
+   Function to wrap post update failure action

total: 0 errors, 10 warnings, 104 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/StateActions/StateActionWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#13: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:13:
+/**
+   Function to wrap Verify action handler

WARNING: else is not generally useful after a break or return
#28: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:28:
+		return 1;
+	} else {

WARNING: Block comments use * on subsequent lines
#37: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:37:
+/**
+   Function to wrap Verify action handler

WARNING: Block comments use * on subsequent lines
#53: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:53:
+/**
+   Function to wrap Verify action handler

WARNING: Block comments use * on subsequent lines
#66: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:66:
+/**
+   Function to wrap Verify action handler

WARNING: Block comments use * on subsequent lines
#91: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:91:
+/**
+   Function to wrap post verify failure action

WARNING: Block comments use * on subsequent lines
#126: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:126:
+/**
+   Function to wrap post Rec success action

WARNING: Missing a blank line after declarations
#137: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:137:
+		TUPLE TupleData;
+		DataContext.image = ImageType;

WARNING: Missing a blank line after declarations
#144: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:144:
+		TUPLE TupleData;
+		DataContext.image = ImageType;

WARNING: Block comments use * on subsequent lines
#154: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:154:
+/**
+   Function to wrap post Rec failure action

WARNING: Missing a blank line after declarations
#164: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:164:
+		TUPLE TupleData;
+		DataContext.image = ImageType;

WARNING: Block comments use * on subsequent lines
#173: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:173:
+/**
+   Function to wrap post update success action

WARNING: Block comments use * on subsequent lines
#201: FILE: Wrapper/BareMetal/StateActions/StateActionWrapper.c:201:
+/**
+   Function to wrap post update failure action

total: 0 errors, 14 warnings, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/StateActions/StateActionWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/StateManager/StateManager.h:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#17: FILE: Wrapper/BareMetal/StateManager/StateManager.h:17:
+/**
+   Function to wrap statemanager

total: 0 errors, 2 warnings, 29 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/StateManager/StateManager.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/BareMetal/StateManager/StateManager.c:1:
+// ***********************************************************************

WARNING: Block comments use * on subsequent lines
#13: FILE: Wrapper/BareMetal/StateManager/StateManager.c:13:
+/**
+   Function to wrap statemanager

total: 0 errors, 2 warnings, 28 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/BareMetal/StateManager/StateManager.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 2 lines checked

Wrapper/CMakeLists.txt has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 17 lines checked

Wrapper/Wrapper.cmake has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Application/ApplicationWrapper.c:1:
+///***********************************************************************

WARNING: Block comments use * on subsequent lines
#2: FILE: Wrapper/Application/ApplicationWrapper.c:2:
+///***********************************************************************
+// *                                                                     *

WARNING: Block comments use * on subsequent lines
#13: FILE: Wrapper/Application/ApplicationWrapper.c:13:
+/**
+   Function to ApplicationEntry

WARNING: Block comments use * on subsequent lines
#20: FILE: Wrapper/Application/ApplicationWrapper.c:20:
+/*
+   void ApplicationStartHook(void)

WARNING: Block comments use * on subsequent lines
#27: FILE: Wrapper/Application/ApplicationWrapper.c:27:
+/**
+   Function to InitializeEngines

WARNING: Prefer using '"%s...", __func__' to using 'InitializeEngines', this function's name, in a string
#35: FILE: Wrapper/Application/ApplicationWrapper.c:35:
+	printf("InitializeEngines...\r\n");

WARNING: Block comments use * on subsequent lines
#39: FILE: Wrapper/Application/ApplicationWrapper.c:39:
+/**
+   Function to InitializeEngines

WARNING: Block comments use * on subsequent lines
#55: FILE: Wrapper/Application/ApplicationWrapper.c:55:
+/*
+   Function to BmcBootRelease

WARNING: Prefer using '"%s...", __func__' to using 'BmcBootRelease', this function's name, in a string
#63: FILE: Wrapper/Application/ApplicationWrapper.c:63:
+	printf("BmcBootRelease...\r\n");

WARNING: Block comments use * on subsequent lines
#68: FILE: Wrapper/Application/ApplicationWrapper.c:68:
+/*
+   Function to BmcBootHold

WARNING: Prefer using '"%s...", __func__' to using 'BmcBootHold', this function's name, in a string
#76: FILE: Wrapper/Application/ApplicationWrapper.c:76:
+	printf("BmcBootHold...\r\n");

WARNING: Block comments use * on subsequent lines
#80: FILE: Wrapper/Application/ApplicationWrapper.c:80:
+/*
+   Function to SetPlatformState

WARNING: Prefer using '"%s...", __func__' to using 'SetPlatformState', this function's name, in a string
#90: FILE: Wrapper/Application/ApplicationWrapper.c:90:
+	printf("SetPlatformState...\r\n");

WARNING: Block comments use * on subsequent lines
#96: FILE: Wrapper/Application/ApplicationWrapper.c:96:
+/*
+   Function to InitializeSmbusMailbox

WARNING: Prefer using '"%s...", __func__' to using 'InitializeSmbusMailbox', this function's name, in a string
#104: FILE: Wrapper/Application/ApplicationWrapper.c:104:
+	printf("InitializeSmbusMailbox\r\n");

total: 0 errors, 15 warnings, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Application/ApplicationWrapper.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Wrapper/Application/ApplicationWrapper.h:1:
+// ***********************************************************************

total: 0 errors, 1 warnings, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Wrapper/Application/ApplicationWrapper.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

Wrapper/XFR/README.md has no obvious style problems and is ready for submission.
total: 0 errors, 0 warnings, 1 lines checked

Silicon/AST1060/.git has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/otp/otp_aspeed.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/otp/otp_aspeed.h:4:
+ * SPDX-License-Identifier: Apache-2.0

total: 0 errors, 2 warnings, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/otp/otp_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/otp/otp_aspeed.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/otp/otp_aspeed.c:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: Macros with complex values should be enclosed in parentheses
#18: FILE: Silicon/AST1060/otp/otp_aspeed.c:18:
+#define OTP_COMMAND                             OTP_BASE + 0x4

WARNING: Macros with complex values should be enclosed in parentheses
#19: FILE: Silicon/AST1060/otp/otp_aspeed.c:19:
+#define OTP_TIMING                              OTP_BASE + 0x8

WARNING: Macros with complex values should be enclosed in parentheses
#20: FILE: Silicon/AST1060/otp/otp_aspeed.c:20:
+#define OTP_ADDR                                OTP_BASE + 0x10

WARNING: Macros with complex values should be enclosed in parentheses
#21: FILE: Silicon/AST1060/otp/otp_aspeed.c:21:
+#define OTP_STATUS                              OTP_BASE + 0x14

WARNING: Macros with complex values should be enclosed in parentheses
#22: FILE: Silicon/AST1060/otp/otp_aspeed.c:22:
+#define OTP_COMPARE_1                   OTP_BASE + 0x20

WARNING: Macros with complex values should be enclosed in parentheses
#23: FILE: Silicon/AST1060/otp/otp_aspeed.c:23:
+#define OTP_COMPARE_2                   OTP_BASE + 0x24

WARNING: Macros with complex values should be enclosed in parentheses
#24: FILE: Silicon/AST1060/otp/otp_aspeed.c:24:
+#define OTP_COMPARE_3                   OTP_BASE + 0x28

WARNING: Macros with complex values should be enclosed in parentheses
#25: FILE: Silicon/AST1060/otp/otp_aspeed.c:25:
+#define OTP_COMPARE_4                   OTP_BASE + 0x2c

WARNING: Macros with complex values should be enclosed in parentheses
#26: FILE: Silicon/AST1060/otp/otp_aspeed.c:26:
+#define SW_REV_ID0                              OTP_BASE + 0x68

WARNING: Macros with complex values should be enclosed in parentheses
#27: FILE: Silicon/AST1060/otp/otp_aspeed.c:27:
+#define SW_REV_ID1                              OTP_BASE + 0x6c

WARNING: Macros with complex values should be enclosed in parentheses
#28: FILE: Silicon/AST1060/otp/otp_aspeed.c:28:
+#define SEC_KEY_NUM                             OTP_BASE + 0x78

WARNING: printk() should include KERN_<LEVEL> facility level
#242: FILE: Silicon/AST1060/otp/otp_aspeed.c:242:
+		printk("SOC is not supported\n");

WARNING: braces {} are not necessary for single statement blocks
#330: FILE: Silicon/AST1060/otp/otp_aspeed.c:330:
+			if (bit_value == 0 && os[j].writeable_option == -1) {
+				os[j].writeable_option = option;
+			}

WARNING: braces {} are not necessary for single statement blocks
#341: FILE: Silicon/AST1060/otp/otp_aspeed.c:341:
+			if (bit_value == 0 && os[j].writeable_option == -1) {
+				os[j].writeable_option = option;
+			}

WARNING: Block comments use * on subsequent lines
#376: FILE: Silicon/AST1060/otp/otp_aspeed.c:376:
+/*
+		printk("BIT(hex)  Value  Option           Status\n");

WARNING: Missing a blank line after declarations
#404: FILE: Silicon/AST1060/otp/otp_aspeed.c:404:
+	uint32_t ret[1];
+	if (offset + dw_count > 32)

WARNING: Missing a blank line after declarations
#418: FILE: Silicon/AST1060/otp/otp_aspeed.c:418:
+	int ret;
+	ret = ast_otp_init();

WARNING: Block comments use * on subsequent lines
#440: FILE: Silicon/AST1060/otp/otp_aspeed.c:440:
+		/*
+			if (i % 4 == 0)

WARNING: Missing a blank line after declarations
#454: FILE: Silicon/AST1060/otp/otp_aspeed.c:454:
+	int ret;
+	ret = ast_otp_init();

WARNING: Missing a blank line after declarations
#467: FILE: Silicon/AST1060/otp/otp_aspeed.c:467:
+	int ret;
+	ret = ast_otp_init();

WARNING: printk() should include KERN_<LEVEL> facility level
#493: FILE: Silicon/AST1060/otp/otp_aspeed.c:493:
+	printk("DW    BIT        Value       Description\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#494: FILE: Silicon/AST1060/otp/otp_aspeed.c:494:
+	printk("__________________________________________________________________________\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#509: FILE: Silicon/AST1060/otp/otp_aspeed.c:509:
+		printk("0x%-4X", dw_offset);

WARNING: printk() should include KERN_<LEVEL> facility level
#512: FILE: Silicon/AST1060/otp/otp_aspeed.c:512:
+			printk("0x%-9X", conf_info[i].bit_offset);

WARNING: printk() should include KERN_<LEVEL> facility level
#514: FILE: Silicon/AST1060/otp/otp_aspeed.c:514:
+			printk("0x%-2X:0x%-4X",

WARNING: printk() should include KERN_<LEVEL> facility level
#518: FILE: Silicon/AST1060/otp/otp_aspeed.c:518:
+		printk("0x%-10x", otp_value);

WARNING: printk() should include KERN_<LEVEL> facility level
#521: FILE: Silicon/AST1060/otp/otp_aspeed.c:521:
+			printk("Reserved\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#523: FILE: Silicon/AST1060/otp/otp_aspeed.c:523:
+			printk(conf_info[i].information, otp_value);

WARNING: printk() should include KERN_<LEVEL> facility level
#524: FILE: Silicon/AST1060/otp/otp_aspeed.c:524:
+			printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#538: FILE: Silicon/AST1060/otp/otp_aspeed.c:538:
+			printk(conf_info[i].information, valid_bit);

WARNING: printk() should include KERN_<LEVEL> facility level
#539: FILE: Silicon/AST1060/otp/otp_aspeed.c:539:
+			printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#541: FILE: Silicon/AST1060/otp/otp_aspeed.c:541:
+			printk("%s\n", conf_info[i].information);

WARNING: Block comments use * on subsequent lines
#562: FILE: Silicon/AST1060/otp/otp_aspeed.c:562:
+/*
+static int otp_print_strap_info(int view)

total: 0 errors, 35 warnings, 650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/otp/otp_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:1:
+#include "I2C_Slave_aspeed.h"

WARNING: Block comments use * on subsequent lines
#32: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:32:
+/*
+void SetCpldIdentifier(uint8_t Data)

WARNING: Block comments use * on subsequent lines
#46: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:46:
+/*
+uint8_t GetCpldIdentifier(void)

WARNING: printk() should include KERN_<LEVEL> facility level
#67: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:67:
+	printk("PchBmcProcessCommands CipherText[0] =%x\n", CipherText[0]);

WARNING: Prefer using '"%s...", __func__' to using 'PchBmcProcessCommands', this function's name, in a string
#67: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:67:
+	printk("PchBmcProcessCommands CipherText[0] =%x\n", CipherText[0]);

WARNING: printk() should include KERN_<LEVEL> facility level
#68: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:68:
+	printk("PchBmcProcessCommands CipherText[1] =%x\n", CipherText[1]);

WARNING: Prefer using '"%s...", __func__' to using 'PchBmcProcessCommands', this function's name, in a string
#68: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:68:
+	printk("PchBmcProcessCommands CipherText[1] =%x\n", CipherText[1]);

WARNING: Block comments use * on subsequent lines
#80: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:80:
+/*
+uint8_t PchBmcReadCommands(unsigned char *CipherText)

ERROR: code indent should use tabs where possible
#86: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:86:
+          DataToSend = GetCpldIdentifier();$

ERROR: code indent should use tabs where possible
#87: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:87:
+          break;$

WARNING: Block comments use * on subsequent lines
#117: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:117:
+/*
+int i2c_1060_slave_cb2_write_requested(struct i2c_slave_config *config)

WARNING: Block comments should align the * on each line
#125: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:125:
+   /*	* i2c_1060_slave_cb2_read_requested
+ * callback function for I2C_2 read requested

ERROR: code indent should use tabs where possible
#133: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:133:
+                                        uint8_t *val)$

WARNING: Block comments use * on subsequent lines
#133: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:133:
+/*int i2c_1060_slave_cb2_read_requested(struct i2c_slave_config *config,
+                                        uint8_t *val)

ERROR: code indent should use tabs where possible
#135: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:135:
+        if(gI2cSlaveProcess.operation == MASTER_DATA_READ_SLAVE_DATA_SEND)$

ERROR: code indent should use tabs where possible
#136: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:136:
+        {$

ERROR: code indent should use tabs where possible
#138: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:138:
+        }$

ERROR: code indent should use tabs where possible
#139: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:139:
+        printk("i2c_1060_slave_cb2_read_requested read_requested *val = %x\n",*val);$

ERROR: code indent should use tabs where possible
#140: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:140:
+        ClearI2cSlaveProcessData();$

ERROR: code indent should use tabs where possible
#141: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:141:
+        return 0;$

WARNING: Block comments should align the * on each line
#145: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:145:
+   /*	* i2c_1060_slave_cb2_write_received
+ * callback function for I2C_2 write received

ERROR: code indent should use tabs where possible
#153: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:153:
+                                       uint8_t val)$

WARNING: Block comments use * on subsequent lines
#153: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:153:
+/*int i2c_1060_slave_cb2_write_received(struct i2c_slave_config *config,
+                                       uint8_t val)

ERROR: code indent should use tabs where possible
#155: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:155:
+        printk("i2c_1060_slave_cb2_write_received write_received val = %x\n",val);$

ERROR: code indent should use tabs where possible
#156: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:156:
+        //read protocol to read master command$

ERROR: code indent should use tabs where possible
#157: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:157:
+        if(gI2cSlaveProcess.operation == MASTER_CMD_READ)$

ERROR: code indent should use tabs where possible
#158: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:158:
+        {$

ERROR: code indent should use tabs where possible
#159: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:159:
+                gI2cSlaveProcess.DataBuf[SLAVE_BUF_INDEX0] = val;$

ERROR: code indent should use tabs where possible
#160: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:160:
+                gI2cSlaveProcess.operation = MASTER_DATA_READ_SLAVE_DATA_SEND;$

ERROR: code indent should use tabs where possible
#161: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:161:
+        }$

ERROR: code indent should use tabs where possible
#163: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:163:
+        //write protocol to read master data after read master command$

ERROR: code indent should use tabs where possible
#164: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:164:
+        if(gI2cSlaveProcess.operation == MASTER_DATA_READ_SLAVE_DATA_SEND)$

ERROR: code indent should use tabs where possible
#165: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:165:
+        {$

ERROR: code indent should use tabs where possible
#166: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:166:
+                gI2cSlaveProcess.DataBuf[SLAVE_BUF_INDEX1] = val;$

ERROR: code indent should use tabs where possible
#167: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:167:
+                gI2cSlaveProcess.InProcess = I2CInProcess_Flag;$

ERROR: code indent should use tabs where possible
#168: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:168:
+        }$

ERROR: code indent should use tabs where possible
#169: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:169:
+        return 0;$

WARNING: Block comments should align the * on each line
#173: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:173:
+   /*	* i2c_1060_slave_cb2_read_processed
+ * callback function for I2C_2 read processed

ERROR: code indent should use tabs where possible
#181: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:181:
+                                       uint8_t *val)$

WARNING: Block comments use * on subsequent lines
#181: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:181:
+/*int i2c_1060_slave_cb2_read_processed(struct i2c_slave_config *config,
+                                       uint8_t *val)

ERROR: code indent should use tabs where possible
#183: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:183:
+        printk("i2c_1060_slave_cb2_read_processed read_processed *val = %x\n",val);$

ERROR: code indent should use tabs where possible
#184: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:184:
+        return 0;$

WARNING: Block comments should align the * on each line
#188: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:188:
+   /*	* i2c_1060_slave_cb2_stop
+ * callback function for I2C_2 stop

WARNING: Block comments use * on subsequent lines
#195: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:195:
+/*int i2c_1060_slave_cb2_stop(struct i2c_slave_config *config)
+   {

ERROR: code indent should use tabs where possible
#196: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:196:
+        printk("i2c_1060_slave_cb2_stop stop\n");$

ERROR: code indent should use tabs where possible
#197: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:197:
+        return 0;$

WARNING: Block comments should align the * on each line
#201: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:201:
+   /*	* i2c_1060_callbacks_2
+ * callback function for I2C_2

WARNING: Block comments use * on subsequent lines
#204: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:204:
+/*const struct i2c_slave_callbacks i2c_1060_callbacks_2 =
+   {

ERROR: code indent should use tabs where possible
#205: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:205:
+        .write_requested = i2c_1060_slave_cb2_write_requested,$

ERROR: code indent should use tabs where possible
#206: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:206:
+        .read_requested = i2c_1060_slave_cb2_read_requested,$

ERROR: code indent should use tabs where possible
#207: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:207:
+        .write_received =i2c_1060_slave_cb2_write_received,$

ERROR: code indent should use tabs where possible
#208: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:208:
+        .read_processed = i2c_1060_slave_cb2_read_processed,$

ERROR: code indent should use tabs where possible
#209: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:209:
+        .stop = i2c_1060_slave_cb2_stop,$

WARNING: Block comments should align the * on each line
#213: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:213:
+   /*	* i2c_1060_slave_cb1_write_requested
+ * callback function for I2C_1 write requested

WARNING: Block comments use * on subsequent lines
#220: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:220:
+/*int i2c_1060_slave_cb1_write_requested(struct i2c_slave_config *config)
+   {

ERROR: code indent should use tabs where possible
#221: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:221:
+        gI2cSlaveProcess.operation = MASTER_CMD_READ;$

ERROR: code indent should use tabs where possible
#222: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:222:
+        printk("i2c_1060_slave_cb1_write_requested write_requested\n");$

ERROR: code indent should use tabs where possible
#223: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:223:
+        return 0;$

WARNING: Block comments should align the * on each line
#227: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:227:
+   /*	* i2c_1060_slave_cb1_read_requested
+ * callback function for I2C_1 read requested

ERROR: code indent should use tabs where possible
#235: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:235:
+                                       uint8_t *val)$

WARNING: Block comments use * on subsequent lines
#235: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:235:
+/*int i2c_1060_slave_cb1_read_requested(struct i2c_slave_config *config,
+                                       uint8_t *val)

ERROR: code indent should use tabs where possible
#237: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:237:
+        if(gI2cSlaveProcess.operation == MASTER_DATA_READ_SLAVE_DATA_SEND)$

ERROR: code indent should use tabs where possible
#238: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:238:
+        {$

ERROR: code indent should use tabs where possible
#240: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:240:
+        }$

ERROR: code indent should use tabs where possible
#241: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:241:
+        printk("i2c_1060_slave_cb1_read_requested read_requested *val = %x\n",*val);$

ERROR: code indent should use tabs where possible
#242: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:242:
+        ClearI2cSlaveProcessData();$

ERROR: code indent should use tabs where possible
#243: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:243:
+        return 0;$

WARNING: Block comments should align the * on each line
#247: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:247:
+   /*	* i2c_1060_slave_cb1_write_received
+ * callback function for I2C_1 write received

ERROR: code indent should use tabs where possible
#255: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:255:
+                                       uint8_t val)$

WARNING: Block comments use * on subsequent lines
#255: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:255:
+/*int i2c_1060_slave_cb1_write_received(struct i2c_slave_config *config,
+                                       uint8_t val)

ERROR: code indent should use tabs where possible
#257: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:257:
+        printk("i2c_1060_slave_cb1_write_received write_received val = %x\n",val);$

ERROR: code indent should use tabs where possible
#258: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:258:
+        //read protocol to read master command$

ERROR: code indent should use tabs where possible
#259: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:259:
+        if(gI2cSlaveProcess.operation == MASTER_CMD_READ)$

ERROR: code indent should use tabs where possible
#260: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:260:
+        {$

ERROR: code indent should use tabs where possible
#261: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:261:
+                gI2cSlaveProcess.DataBuf[SLAVE_BUF_INDEX0] = val;$

ERROR: code indent should use tabs where possible
#262: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:262:
+                gI2cSlaveProcess.operation = MASTER_DATA_READ_SLAVE_DATA_SEND;$

ERROR: code indent should use tabs where possible
#263: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:263:
+        }$

ERROR: code indent should use tabs where possible
#265: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:265:
+        //write protocol to read master data after read master command$

ERROR: code indent should use tabs where possible
#266: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:266:
+        if(gI2cSlaveProcess.operation == MASTER_DATA_READ_SLAVE_DATA_SEND)$

ERROR: code indent should use tabs where possible
#267: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:267:
+        {$

ERROR: code indent should use tabs where possible
#268: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:268:
+                gI2cSlaveProcess.DataBuf[SLAVE_BUF_INDEX1] = val;$

ERROR: code indent should use tabs where possible
#269: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:269:
+                gI2cSlaveProcess.InProcess = I2CInProcess_Flag;$

ERROR: code indent should use tabs where possible
#270: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:270:
+        }$

ERROR: code indent should use tabs where possible
#271: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:271:
+        return 0;$

WARNING: Block comments should align the * on each line
#275: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:275:
+   /*	* i2c_1060_slave_cb1_read_processed
+ * callback function for I2C_1 read processed

ERROR: code indent should use tabs where possible
#283: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:283:
+                                       uint8_t *val)$

WARNING: Block comments use * on subsequent lines
#283: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:283:
+/*int i2c_1060_slave_cb1_read_processed(struct i2c_slave_config *config,
+                                       uint8_t *val)

ERROR: code indent should use tabs where possible
#285: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:285:
+        printk("i2c_1060_slave_cb1_read_processed read_processed *val = %x\n",val);$

ERROR: code indent should use tabs where possible
#286: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:286:
+        return 0;$

WARNING: Block comments should align the * on each line
#290: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:290:
+   /*	* i2c_1060_slave_cb1_stop
+ * callback function for I2C_1 stop

WARNING: Block comments use * on subsequent lines
#297: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:297:
+/*int i2c_1060_slave_cb1_stop(struct i2c_slave_config *config)
+   {

ERROR: code indent should use tabs where possible
#298: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:298:
+        printk("i2c_1060_slave_cb1_stop stop\n");$

ERROR: code indent should use tabs where possible
#299: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:299:
+        return 0;$

WARNING: Block comments should align the * on each line
#303: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:303:
+   /*	* i2c_1060_callbacks_1
+ * callback function for I2C_1

WARNING: Block comments use * on subsequent lines
#306: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:306:
+/*const struct i2c_slave_callbacks i2c_1060_callbacks_1 =
+   {

ERROR: code indent should use tabs where possible
#307: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:307:
+        .write_requested = i2c_1060_slave_cb1_write_requested,$

ERROR: code indent should use tabs where possible
#308: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:308:
+        .read_requested = i2c_1060_slave_cb1_read_requested,$

ERROR: code indent should use tabs where possible
#309: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:309:
+        .write_received =i2c_1060_slave_cb1_write_received,$

ERROR: code indent should use tabs where possible
#310: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:310:
+        .read_processed = i2c_1060_slave_cb1_read_processed,$

ERROR: code indent should use tabs where possible
#311: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:311:
+        .stop = i2c_1060_slave_cb1_stop,$

WARNING: Block comments should align the * on each line
#315: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:315:
+   /*	* ast_i2c_slave_dev_init
+ * Initial I2C device to slave device,only support I2C_1 and I2C_2 so far

WARNING: printk() should include KERN_<LEVEL> facility level
#327: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:327:
+	printk("ast_i2c_slave_dev_init\n");

WARNING: Prefer using '"%s...", __func__' to using 'ast_i2c_slave_dev_init', this function's name, in a string
#327: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:327:
+	printk("ast_i2c_slave_dev_init\n");

WARNING: braces {} are not necessary for single statement blocks
#330: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:330:
+	if (i2c_slave_register(dev, &slave_cfg)) {
+		printk("I2C: Slave Device driver %s not found.", dev->name);
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#331: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:331:
+		printk("I2C: Slave Device driver %s not found.", dev->name);

WARNING: adding a line without newline at end of file
#337: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.c:337:
+}

total: 69 errors, 37 warnings, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

Silicon/AST1060/i2c/I2C_Slave_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.h:1:
+#ifndef ZEPHYR_INCLUDE_I2C_FILTER_ASPEED_API_MIDLEYER_H_

total: 0 errors, 1 warnings, 13 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/i2c/i2c_filter_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:1:
+#include <zephyr.h>

WARNING: void function return statements are not generally useful
#19: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:19:
+	return;
+}

WARNING: printk() should include KERN_<LEVEL> facility level
#31: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:31:
+		printk("I2C PFR : FLT Device driver not found.");

WARNING: printk() should include KERN_<LEVEL> facility level
#61: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:61:
+		printk("I2C PFR : FLT Device Update failed.");

WARNING: printk() should include KERN_<LEVEL> facility level
#86: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:86:
+		printk("I2C PFR : FLT Device %s failed.",

WARNING: printk() should include KERN_<LEVEL> facility level
#114: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:114:
+		printk("I2C PFR : FLT Device Initial failed.");

WARNING: printk() should include KERN_<LEVEL> facility level
#121: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:121:
+		printk("I2C PFR : FLT Device Enable / Disable failed.");

WARNING: printk() should include KERN_<LEVEL> facility level
#128: FILE: Silicon/AST1060/i2c/i2c_filter_aspeed.c:128:
+		printk("I2C PFR : FLT Device Set Default failed.");

total: 0 errors, 8 warnings, 133 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/i2c/i2c_filter_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:1:
+#ifndef ZEPHYR_INCLUDE_I2C_SLAVE_DEVICE_API_MIDLEYER_H_

WARNING: Block comments use * on subsequent lines
#7: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:7:
+/*typedef struct _SMBUS_MAIL_BOX
+   {

ERROR: code indent should use tabs where possible
#10: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:10:
+        uint8_t CpldRoTSVN;^I^I^I^I^I//02h$

ERROR: code indent should use tabs where possible
#11: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:11:
+        uint8_t PlatformState;^I^I^I^I//03h$

ERROR: code indent should use tabs where possible
#12: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:12:
+        uint8_t Recoverycount;^I^I^I^I//04h$

ERROR: code indent should use tabs where possible
#13: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:13:
+        uint8_t LastRecoveryReason;^I^I^I//05h$

ERROR: code indent should use tabs where possible
#14: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:14:
+        uint8_t PanicEventCount;^I^I^I//06h$

ERROR: code indent should use tabs where possible
#15: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:15:
+        uint8_t LastPanicReason;^I^I^I//07h$

ERROR: code indent should use tabs where possible
#16: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:16:
+        uint8_t MajorErrorCode;^I^I^I^I//08h$

ERROR: code indent should use tabs where possible
#17: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:17:
+        uint8_t MinorErrorCode;^I^I^I^I//09h$

ERROR: code indent should use tabs where possible
#18: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:18:
+        union {$

ERROR: code indent should use tabs where possible
#19: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:19:
+                struct {$

ERROR: code indent should use tabs where possible
#20: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:20:
+                        uint8_t CommandBusy :1;$

ERROR: code indent should use tabs where possible
#21: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:21:
+                        uint8_t CommandDone :1;$

ERROR: code indent should use tabs where possible
#22: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:22:
+                        uint8_t CommandError :1;$

ERROR: code indent should use tabs where possible
#23: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:23:
+                        uint8_t UfmStatusReserved :1;$

ERROR: code indent should use tabs where possible
#24: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:24:
+                        uint8_t UfmLocked :1;$

ERROR: code indent should use tabs where possible
#25: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:25:
+                        uint8_t Ufmprovisioned :1;$

ERROR: code indent should use tabs where possible
#26: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:26:
+                        uint8_t PITlevel1enforced :1;$

ERROR: code indent should use tabs where possible
#27: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:27:
+                        uint8_t PITL2CompleteSuccess :1;$

ERROR: code indent should use tabs where possible
#28: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:28:
+                };$

ERROR: code indent should use tabs where possible
#29: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:29:
+                uint8_t UfmStatusValue;^I^I^I//0Ah$

ERROR: code indent should use tabs where possible
#30: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:30:
+        };$

ERROR: code indent should use tabs where possible
#31: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:31:
+        uint8_t UfmCommand;^I^I^I^I^I//0Bh$

ERROR: code indent should use tabs where possible
#32: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:32:
+        union {$

ERROR: code indent should use tabs where possible
#33: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:33:
+                struct {$

ERROR: code indent should use tabs where possible
#34: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:34:
+                        uint8_t ExecuteCmd :1;$

ERROR: code indent should use tabs where possible
#35: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:35:
+                        uint8_t FlushWriteFIFO :1;$

ERROR: code indent should use tabs where possible
#36: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:36:
+                        uint8_t FlushReadFIFO :1;$

ERROR: code indent should use tabs where possible
#37: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:37:
+                        uint8_t UfmCmdTriggerReserved :4;$

ERROR: code indent should use tabs where possible
#38: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:38:
+                };$

ERROR: code indent should use tabs where possible
#39: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:39:
+                uint8_t UfmCmdTriggerValue;^I^I//0Ch$

ERROR: code indent should use tabs where possible
#40: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:40:
+        };$

ERROR: code indent should use tabs where possible
#41: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:41:
+        uint8_t UfmWriteFIFO;^I^I^I^I//0Dh$

ERROR: code indent should use tabs where possible
#42: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:42:
+        uint8_t UfmReadFIFO;^I^I^I^I//0Eh$

ERROR: code indent should use tabs where possible
#43: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:43:
+        uint8_t BmcCheckpoint;^I^I^I^I//0Fh$

ERROR: code indent should use tabs where possible
#44: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:44:
+        uint8_t AcmCheckpoint;^I^I^I^I//10h$

ERROR: code indent should use tabs where possible
#45: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:45:
+        uint8_t BiosCheckpoint;^I^I^I^I//11h$

ERROR: code indent should use tabs where possible
#46: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:46:
+        union {$

ERROR: code indent should use tabs where possible
#47: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:47:
+                struct {$

ERROR: code indent should use tabs where possible
#48: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:48:
+                        uint8_t PchUpdateIntentPchActive : 1;$

ERROR: code indent should use tabs where possible
#49: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:49:
+                        uint8_t PchUpdateIntentPchrecovery : 1;$

ERROR: code indent should use tabs where possible
#50: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:50:
+                        uint8_t PchUpdateIntentCpldActive : 1;$

ERROR: code indent should use tabs where possible
#51: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:51:
+                        uint8_t PchUpdateIntentBmcActive : 1;$

ERROR: code indent should use tabs where possible
#52: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:52:
+                        uint8_t PchUpdateIntentBmcRecovery : 1;$

ERROR: code indent should use tabs where possible
#53: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:53:
+                        uint8_t PchUpdateIntentCpldRecovery : 1;$

ERROR: code indent should use tabs where possible
#54: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:54:
+                        uint8_t PchUpdateIntentUpdateDynamic : 1;$

ERROR: code indent should use tabs where possible
#55: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:55:
+                        uint8_t PchUpdateIntentUpdateAtReset : 1;$

ERROR: code indent should use tabs where possible
#56: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:56:
+                };$

ERROR: code indent should use tabs where possible
#57: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:57:
+                uint8_t PchUpdateIntentValue;^I//12h$

ERROR: code indent should use tabs where possible
#58: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:58:
+        };$

ERROR: code indent should use tabs where possible
#59: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:59:
+        union {$

ERROR: code indent should use tabs where possible
#60: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:60:
+                struct {$

ERROR: code indent should use tabs where possible
#61: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:61:
+                        uint8_t BmcUpdateIntentPchActive : 1;$

ERROR: code indent should use tabs where possible
#62: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:62:
+                        uint8_t BmcUpdateIntentPchrecovery : 1;$

ERROR: code indent should use tabs where possible
#63: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:63:
+                        uint8_t BmcUpdateIntentCpldActive : 1;$

ERROR: code indent should use tabs where possible
#64: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:64:
+                        uint8_t BmcUpdateIntentBmcActive : 1;$

ERROR: code indent should use tabs where possible
#65: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:65:
+                        uint8_t BmcUpdateIntentBmcRecovery : 1;$

ERROR: code indent should use tabs where possible
#66: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:66:
+                        uint8_t BmcUpdateIntentCpldRecovery : 1;$

ERROR: code indent should use tabs where possible
#67: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:67:
+                        uint8_t BmcUpdateIntentUpdateDynamic : 1;$

ERROR: code indent should use tabs where possible
#68: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:68:
+                        uint8_t BmcUpdateIntentUpdateAtReset : 1;$

ERROR: code indent should use tabs where possible
#69: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:69:
+                };$

ERROR: code indent should use tabs where possible
#70: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:70:
+                uint8_t BmcUpdateIntentValue;^I//13h$

ERROR: code indent should use tabs where possible
#71: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:71:
+        };$

ERROR: code indent should use tabs where possible
#72: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:72:
+        uint8_t PchPFMActiveSVN;^I^I^I//14h$

ERROR: code indent should use tabs where possible
#73: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:73:
+        uint8_t PchPFMActiveMajorVersion;^I//15h$

ERROR: code indent should use tabs where possible
#74: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:74:
+        uint8_t PchPFMActiveMinorVersion;^I//16h$

ERROR: code indent should use tabs where possible
#75: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:75:
+        uint8_t BmcPFMActiveSVN;^I^I^I//17h$

ERROR: code indent should use tabs where possible
#76: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:76:
+        uint8_t BmcPFMActiveMajorVersion;^I//18h$

ERROR: code indent should use tabs where possible
#77: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:77:
+        uint8_t BmcPFMActiveMinorVersion;^I//19h$

ERROR: code indent should use tabs where possible
#78: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:78:
+        uint8_t PchPFMRecoverSVN;^I^I^I//1Ah$

ERROR: code indent should use tabs where possible
#79: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:79:
+        uint8_t PchPFMRecoverMajorVersion;^I//1Bh$

ERROR: code indent should use tabs where possible
#80: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:80:
+        uint8_t PchPFMRecoverMinorVersion;^I//1Ch$

ERROR: code indent should use tabs where possible
#81: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:81:
+        uint8_t BmcPFMRecoverSVN;^I^I^I//1Dh$

ERROR: code indent should use tabs where possible
#82: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:82:
+        uint8_t BmcPFMRecoverMajorVersion;^I//1Eh$

ERROR: code indent should use tabs where possible
#83: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:83:
+        uint8_t BmcPFMRecoverMinorVersion;^I//1Fh$

ERROR: code indent should use tabs where possible
#84: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:84:
+        uint8_t CpldFPGARoTHash[0x40];^I^I//20h to 5Fh$

ERROR: code indent should use tabs where possible
#85: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:85:
+        uint8_t BmcCheckpoint_Pfr30;^I^I//60h$

ERROR: code indent should use tabs where possible
#86: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:86:
+        union {$

ERROR: code indent should use tabs where possible
#87: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:87:
+                struct {$

ERROR: code indent should use tabs where possible
#88: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:88:
+                        uint8_t PchUpdateIntent2SeamlessUpdateIntent : 1;$

ERROR: code indent should use tabs where possible
#89: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:89:
+                };$

ERROR: code indent should use tabs where possible
#90: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:90:
+                uint8_t PchUpdateIntent2Value;^I//61h$

ERROR: code indent should use tabs where possible
#91: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:91:
+        };$

ERROR: code indent should use tabs where possible
#92: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:92:
+        union {$

ERROR: code indent should use tabs where possible
#93: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:93:
+                struct {$

ERROR: code indent should use tabs where possible
#94: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:94:
+                        uint8_t BmcUpdateIntent2SeamlessUpdateIntent : 1;$

ERROR: code indent should use tabs where possible
#95: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:95:
+                };$

ERROR: code indent should use tabs where possible
#96: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:96:
+                uint8_t BmcUpdateIntent2Value;^I//62h$

ERROR: code indent should use tabs where possible
#97: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:97:
+        };$

ERROR: code indent should use tabs where possible
#98: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:98:
+        uint8_t Reserved[0x1D];^I^I^I^I//63h to 7Fh$

ERROR: code indent should use tabs where possible
#99: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:99:
+        uint8_t AcmBiosScratchPad[0x40];^I//80h to BFh$

ERROR: code indent should use tabs where possible
#100: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:100:
+        uint8_t BmcScratchPad[0x40];^I^I//C0h to FFh$

WARNING: Block comments use a trailing */ on a separate line
#140: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:140:
+   } SMBUS_MAILBOX_RF_ADDRESS;*/

WARNING: do not add new typedefs
#142: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:142:
+typedef struct _I2C_Slave_Process {

WARNING: adding a line without newline at end of file
#167: FILE: Silicon/AST1060/i2c/I2C_Slave_aspeed.h:167:
+#endif

total: 91 errors, 5 warnings, 167 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

Silicon/AST1060/i2c/I2C_Slave_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:1:
+#ifdef CONFIG_ECDSA_ASPEED

WARNING: braces {} are not necessary for single statement blocks
#32: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:32:
+	if (status) {
+		printk("ecdsa_begin_session fail: %d\r\n", status);
+	}

WARNING: printk() should include KERN_<LEVEL> facility level
#33: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:33:
+		printk("ecdsa_begin_session fail: %d\r\n", status);

WARNING: braces {} are not necessary for any arm of this statement
#36: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:36:
+	if (status) {
[...]
+	} else {
[...]

WARNING: printk() should include KERN_<LEVEL> facility level
#37: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:37:
+		printk("Fail\r\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#39: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.c:39:
+		printk("Success\r\n");

total: 0 errors, 6 warnings, 44 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/ecdsa_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/rsa_aspeed.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/crypto/rsa_aspeed.h:4:
+ * SPDX-License-Identifier: Apache-2.0

total: 0 errors, 2 warnings, 26 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/rsa_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.h:1:
+#include <stdio.h>

WARNING: adding a line without newline at end of file
#8: FILE: Silicon/AST1060/crypto/ecdsa_aspeed.h:8:
+int aspeed_ecdsa_verify_middlelayer(uint8_t *public_key_x, uint8_t *public_key_y, const uint8_t *digest, uint8_t *signature_r, uint8_t *signature_s);

total: 0 errors, 2 warnings, 8 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/ecdsa_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/hash_aspeed.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/crypto/hash_aspeed.h:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: do not add new typedefs
#24: FILE: Silicon/AST1060/crypto/hash_aspeed.h:24:
+typedef struct hash_params {

WARNING: adding a line without newline at end of file
#58: FILE: Silicon/AST1060/crypto/hash_aspeed.h:58:
+#endif  /* ZEPHYR_INCLUDE_HASH_API_MIDLEYER_H_ */

total: 0 errors, 4 warnings, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/hash_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:1:
+#include <zephyr.h>

WARNING: printk() should include KERN_<LEVEL> facility level
#24: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:24:
+		printk("rsa_begin_session fail: %d", ret);

WARNING: printk() should include KERN_<LEVEL> facility level
#60: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:60:
+		printk("rsa_begin_session fail: %d", ret);

WARNING: unnecessary whitespace before a quoted newline
#93: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:93:
+	//      printk("Verification Successful \n");

WARNING: printk() should include KERN_<LEVEL> facility level
#157: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:157:
+		printk("decrypt fail: %d\n", ret);

WARNING: printk() should include KERN_<LEVEL> facility level
#176: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:176:
+		printk("decrypt pass\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#315: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:315:
+	printk("RsaDecryptTest start:\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaDecryptTest', this function's name, in a string
#315: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:315:
+	printk("RsaDecryptTest start:\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#323: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:323:
+		printk("rsa_begin_session fail: %d", ret);

WARNING: printk() should include KERN_<LEVEL> facility level
#329: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:329:
+		printk("enc fail: %d\n", ret);

WARNING: printk() should include KERN_<LEVEL> facility level
#330: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:330:
+		printk("input text:\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#332: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:332:
+			printk("%02x", RsaTD[0].p[j]);

WARNING: printk() should include KERN_<LEVEL> facility level
#334: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:334:
+				printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#336: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:336:
+		printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#337: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:337:
+		printk("result text:\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#339: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:339:
+			printk("%02x", cipher_text[j]);

WARNING: printk() should include KERN_<LEVEL> facility level
#341: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:341:
+				printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#343: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:343:
+		printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#345: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:345:
+		printk("RsaDecryptTest enc pass\n");

WARNING: Prefer using '"%s...", __func__' to using 'RsaDecryptTest', this function's name, in a string
#345: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:345:
+		printk("RsaDecryptTest enc pass\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#351: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:351:
+		printk("dec fail: %d\n", ret);

WARNING: printk() should include KERN_<LEVEL> facility level
#352: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:352:
+		printk("input text:\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#354: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:354:
+			printk("%02x", RsaTD[0].p[j]);

WARNING: printk() should include KERN_<LEVEL> facility level
#356: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:356:
+				printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#358: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:358:
+		printk("result text:\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#360: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:360:
+			printk("%02x", plain_text[j]);

WARNING: printk() should include KERN_<LEVEL> facility level
#362: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:362:
+				printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#364: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:364:
+		printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#366: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:366:
+		printk("MarkRsaDec pass\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#381: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:381:
+	printk("RsaDecryptTest : %s\n", status_string);

WARNING: printk() should include KERN_<LEVEL> facility level
#385: FILE: Silicon/AST1060/crypto/rsa_aspeed.c:385:
+	printk("rsa_sig_verify_test : %s\n", status_string);

total: 0 errors, 31 warnings, 388 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/rsa_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/crypto/hash_aspeed.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/crypto/hash_aspeed.c:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: Possible repeated word: 'hash'
#22: FILE: Silicon/AST1060/crypto/hash_aspeed.c:22:
+ * @param hash hash digest

WARNING: braces {} are not necessary for any arm of this statement
#39: FILE: Silicon/AST1060/crypto/hash_aspeed.c:39:
+	if (hashParams.sessionReady) {
[...]
+	} else   {
[...]

WARNING: printk() should include KERN_<LEVEL> facility level
#206: FILE: Silicon/AST1060/crypto/hash_aspeed.c:206:
+	printk("\n%s :\n", __func__);

WARNING: Prefer ARRAY_SIZE(HASH_TEST_CAL_SHA_INFO)
#210: FILE: Silicon/AST1060/crypto/hash_aspeed.c:210:
+	for (size_t i = 0; i < (sizeof(HASH_TEST_CAL_SHA_INFO) / sizeof(HASH_TEST_CAL_SHA_INFO[0])); i++) {

WARNING: printk() should include KERN_<LEVEL> facility level
#214: FILE: Silicon/AST1060/crypto/hash_aspeed.c:214:
+			printk(" X hash_engine_start failed !\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#221: FILE: Silicon/AST1060/crypto/hash_aspeed.c:221:
+			printk(" X engine.base.update failed ! index : %d status : %x\n", i, status);

WARNING: printk() should include KERN_<LEVEL> facility level
#228: FILE: Silicon/AST1060/crypto/hash_aspeed.c:228:
+			printk(" X engine.base.finish failed ! index : %d status : %x\n", i, status);

WARNING: printk() should include KERN_<LEVEL> facility level
#236: FILE: Silicon/AST1060/crypto/hash_aspeed.c:236:
+			printk(" X not match ! index : %d status : %x\n", i, status);

WARNING: printk() should include KERN_<LEVEL> facility level
#240: FILE: Silicon/AST1060/crypto/hash_aspeed.c:240:
+			printk("index : %d %s PASS\n", i, SHA_DISPLAY_MSG[HASH_TEST_CAL_SHA_INFO[i].shaAlgo]);

WARNING: printk() should include KERN_<LEVEL> facility level
#254: FILE: Silicon/AST1060/crypto/hash_aspeed.c:254:
+	printk("\n%s :\n", __func__);

WARNING: Prefer ARRAY_SIZE(HASH_TEST_CAL_SHA_INFO)
#256: FILE: Silicon/AST1060/crypto/hash_aspeed.c:256:
+	for (size_t i = 0; i < (sizeof(HASH_TEST_CAL_SHA_INFO) / sizeof(HASH_TEST_CAL_SHA_INFO[0])); i++) { // hmacLength = hash length

WARNING: printk() should include KERN_<LEVEL> facility level
#261: FILE: Silicon/AST1060/crypto/hash_aspeed.c:261:
+			printk(" X hash_engine_start failed !\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#271: FILE: Silicon/AST1060/crypto/hash_aspeed.c:271:
+			printk(" X hash_calculate failed ! index : %d status : %x\n", i, status);

WARNING: printk() should include KERN_<LEVEL> facility level
#278: FILE: Silicon/AST1060/crypto/hash_aspeed.c:278:
+			printk(" X not match ! index : %d status : %x\n", i, status);

WARNING: printk() should include KERN_<LEVEL> facility level
#282: FILE: Silicon/AST1060/crypto/hash_aspeed.c:282:
+			printk("index : %d %s PASS\n", i, SHA_DISPLAY_MSG[HASH_TEST_CAL_SHA_INFO[i].shaAlgo]);

WARNING: printk() should include KERN_<LEVEL> facility level
#298: FILE: Silicon/AST1060/crypto/hash_aspeed.c:298:
+	printk("hash_test_calculate_sha : %s\n", status_string);

WARNING: printk() should include KERN_<LEVEL> facility level
#302: FILE: Silicon/AST1060/crypto/hash_aspeed.c:302:
+	printk("hash_test_start_new_hash_sha : %s\n", status_string);

total: 0 errors, 19 warnings, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/crypto/hash_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/abr/abr_aspeed.h:1:
+#define HW_STRAP1_SCU500                0x7e6e2500

WARNING: adding a line without newline at end of file
#3: FILE: Silicon/AST1060/abr/abr_aspeed.h:3:
+#define ASPEED_FMC_WDT2_CTRL    0x7e620064

total: 0 errors, 2 warnings, 3 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/abr/abr_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/abr/abr_aspeed.c:1:
+#include "abr_aspeed.h"

WARNING: printk() should include KERN_<LEVEL> facility level
#8: FILE: Silicon/AST1060/abr/abr_aspeed.c:8:
+		printk("\r\n The boot SPI ABR is enabled");

WARNING: printk() should include KERN_<LEVEL> facility level
#10: FILE: Silicon/AST1060/abr/abr_aspeed.c:10:
+		printk("\r\n The boot SPI ABR is disabled");

WARNING: printk() should include KERN_<LEVEL> facility level
#13: FILE: Silicon/AST1060/abr/abr_aspeed.c:13:
+		printk(", Single flash");

WARNING: printk() should include KERN_<LEVEL> facility level
#15: FILE: Silicon/AST1060/abr/abr_aspeed.c:15:
+		printk(", Dual flashes");

WARNING: printk() should include KERN_<LEVEL> facility level
#17: FILE: Silicon/AST1060/abr/abr_aspeed.c:17:
+	printk(", Source: %s (%s)",

WARNING: printk() should include KERN_<LEVEL> facility level
#22: FILE: Silicon/AST1060/abr/abr_aspeed.c:22:
+		printk(", Boot SPI flash size: %ldMB.",

WARNING: printk() should include KERN_<LEVEL> facility level
#25: FILE: Silicon/AST1060/abr/abr_aspeed.c:25:
+		printk(", no define size.");

WARNING: printk() should include KERN_<LEVEL> facility level
#27: FILE: Silicon/AST1060/abr/abr_aspeed.c:27:
+	printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#30: FILE: Silicon/AST1060/abr/abr_aspeed.c:30:
+		printk("\r\n WDT status: enabled.\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#32: FILE: Silicon/AST1060/abr/abr_aspeed.c:32:
+		printk("\r\n WDT status: disabled.\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#44: FILE: Silicon/AST1060/abr/abr_aspeed.c:44:
+	printk("\r\n The indicator is cleared.\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#56: FILE: Silicon/AST1060/abr/abr_aspeed.c:56:
+	printk("\r\n The WDT is disabled.\n");

total: 0 errors, 13 warnings, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/abr/abr_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 26 lines checked

Silicon/AST1060/CMakeLists.txt has no obvious style problems and is ready for submission.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:1:
+/*

WARNING: printk() should include KERN_<LEVEL> facility level
#36: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:36:
+		printk("%02x ", buf[i]);

WARNING: printk() should include KERN_<LEVEL> facility level
#38: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:38:
+			printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#40: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:40:
+	printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#56: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:56:
+		printk("[%d]Fail to get GPIO0_M_P", __LINE__);

WARNING: printk() should include KERN_<LEVEL> facility level
#85: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:85:
+		printk("[%d]Fail to get GPIO0_M_P", __LINE__);

WARNING: printk() should include KERN_<LEVEL> facility level
#114: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:114:
+		printk("[%d]Fail to get GPIO0_M_P", __LINE__);

WARNING: printk() should include KERN_<LEVEL> facility level
#143: FILE: Silicon/AST1060/gpio/gpio_aspeed.c:143:
+		printk("[%d]Fail to get GPIO0_M_P", __LINE__);

total: 0 errors, 8 warnings, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/gpio/gpio_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/gpio/gpio_aspeed.h:1:
+/*

total: 0 errors, 1 warnings, 25 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/gpio/gpio_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.h:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: adding a line without newline at end of file
#17: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.h:17:
+#endif

total: 0 errors, 3 warnings, 17 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/spi_filter/spi_filter_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.c:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: adding a line without newline at end of file
#41: FILE: Silicon/AST1060/spi_filter/spi_filter_aspeed.c:41:
+}

total: 0 errors, 3 warnings, 41 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/spi_filter/spi_filter_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/flash/flash_aspeed.h:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/flash/flash_aspeed.h:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: Consider removing the #if 1 and its #endif
#84: FILE: Silicon/AST1060/flash/flash_aspeed.h:84:
+#if 1

WARNING: Unnecessary space before function pointer arguments
#112: FILE: Silicon/AST1060/flash/flash_aspeed.h:112:
+	int (*xfer) (struct flash_master *spi, const struct flash_xfer *xfer);

WARNING: Unnecessary space before function pointer arguments
#121: FILE: Silicon/AST1060/flash/flash_aspeed.h:121:
+	uint32_t (*capabilities) (struct flash_master *spi);

WARNING: Unnecessary space before function pointer arguments
#137: FILE: Silicon/AST1060/flash/flash_aspeed.h:137:
+	int (*get_device_size) (struct flash *flash, uint32_t *bytes);

WARNING: Unnecessary space before function pointer arguments
#149: FILE: Silicon/AST1060/flash/flash_aspeed.h:149:
+	int (*read) (struct flash *flash, uint32_t address, uint8_t *data, size_t length);

WARNING: Unnecessary space before function pointer arguments
#159: FILE: Silicon/AST1060/flash/flash_aspeed.h:159:
+	int (*get_page_size) (struct flash *flash, uint32_t *bytes);

WARNING: Unnecessary space before function pointer arguments
#171: FILE: Silicon/AST1060/flash/flash_aspeed.h:171:
+	int (*minimum_write_per_page) (struct flash *flash, uint32_t *bytes);

WARNING: Unnecessary space before function pointer arguments
#186: FILE: Silicon/AST1060/flash/flash_aspeed.h:186:
+	int (*write) (struct flash *flash, uint32_t address, const uint8_t *data, size_t length);

WARNING: Unnecessary space before function pointer arguments
#196: FILE: Silicon/AST1060/flash/flash_aspeed.h:196:
+	int (*get_sector_size) (struct flash *flash, uint32_t *bytes);

WARNING: Unnecessary space before function pointer arguments
#207: FILE: Silicon/AST1060/flash/flash_aspeed.h:207:
+	int (*sector_erase) (struct flash *flash, uint32_t sector_addr);

WARNING: Unnecessary space before function pointer arguments
#216: FILE: Silicon/AST1060/flash/flash_aspeed.h:216:
+	int (*get_block_size) (struct flash *flash, uint32_t *bytes);

WARNING: Unnecessary space before function pointer arguments
#227: FILE: Silicon/AST1060/flash/flash_aspeed.h:227:
+	int (*block_erase) (struct flash *flash, uint32_t block_addr);

WARNING: Unnecessary space before function pointer arguments
#235: FILE: Silicon/AST1060/flash/flash_aspeed.h:235:
+	int (*chip_erase) (struct flash *flash);

WARNING: Block comments use a trailing */ on a separate line
#240: FILE: Silicon/AST1060/flash/flash_aspeed.h:240:
+ *   */

WARNING: do not add new typedefs
#258: FILE: Silicon/AST1060/flash/flash_aspeed.h:258:
+typedef struct k_sem platform_mutex;

WARNING: Block comments use a trailing */ on a separate line
#262: FILE: Silicon/AST1060/flash/flash_aspeed.h:262:
+ *   */

WARNING: Block comments use a trailing */ on a separate line
#272: FILE: Silicon/AST1060/flash/flash_aspeed.h:272:
+ *   */

WARNING: Block comments use a trailing */ on a separate line
#285: FILE: Silicon/AST1060/flash/flash_aspeed.h:285:
+ *   */

total: 0 errors, 20 warnings, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/flash/flash_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/flash/flash_aspeed.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/flash/flash_aspeed.c:4:
+ * SPDX-License-Identifier: Apache-2.0

WARNING: printk() should include KERN_<LEVEL> facility level
#38: FILE: Silicon/AST1060/flash/flash_aspeed.c:38:
+		printk("%02x ", buf[i]);

WARNING: printk() should include KERN_<LEVEL> facility level
#40: FILE: Silicon/AST1060/flash/flash_aspeed.c:40:
+			printk("\n");

WARNING: printk() should include KERN_<LEVEL> facility level
#42: FILE: Silicon/AST1060/flash/flash_aspeed.c:42:
+	printk("\n");

WARNING: break is not useful after a goto or return
#65: FILE: Silicon/AST1060/flash/flash_aspeed.c:65:
+		return FlashSize;
+		break;

WARNING: Consider removing the code enclosed by this #if 0 and its #endif
#66: FILE: Silicon/AST1060/flash/flash_aspeed.c:66:
+#if 0

WARNING: break is not useful after a goto or return
#70: FILE: Silicon/AST1060/flash/flash_aspeed.c:70:
+		return page_sz;
+		break;

WARNING: break is not useful after a goto or return
#79: FILE: Silicon/AST1060/flash/flash_aspeed.c:79:
+		return page_sz;
+		break;

WARNING: braces {} are not necessary for single statement blocks
#83: FILE: Silicon/AST1060/flash/flash_aspeed.c:83:
+		if (xfer->data != NULL) {
+			memcpy(xfer->data, buf, Datalen);
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#110: FILE: Silicon/AST1060/flash/flash_aspeed.c:110:
+		printk("%d Command is not supported", xfer->cmd);

WARNING: braces {} are not necessary for any arm of this statement
#136: FILE: Silicon/AST1060/flash/flash_aspeed.c:136:
+	if (DeviceId == ROT_INTERNAL_ACTIVE) {
[...]
+	} else if (DeviceId == ROT_INTERNAL_RECOVERY) {
[...]
+	} else if (DeviceId == ROT_INTERNAL_STATE) {
[...]
+	} else if (DeviceId == ROT_INTERNAL_INTEL_STATE) {
[...]
+	} else if (DeviceId == ROT_INTERNAL_KEY) {
[...]
+	} else if (DeviceId == ROT_INTERNAL_LOG) {
[...]

WARNING: break is not useful after a goto or return
#160: FILE: Silicon/AST1060/flash/flash_aspeed.c:160:
+		return FlashSize;
+		break;

WARNING: braces {} are not necessary for single statement blocks
#168: FILE: Silicon/AST1060/flash/flash_aspeed.c:168:
+		if (xfer->data != NULL) {
+			memcpy(xfer->data, buf, Datalen);
+		}

WARNING: printk() should include KERN_<LEVEL> facility level
#185: FILE: Silicon/AST1060/flash/flash_aspeed.c:185:
+		printk("%d Command is not supported", xfer->cmd);

WARNING: printk() should include KERN_<LEVEL> facility level
#190: FILE: Silicon/AST1060/flash/flash_aspeed.c:190:
+		printk("%d Command is not supported", xfer->cmd);

WARNING: printk() should include KERN_<LEVEL> facility level
#199: FILE: Silicon/AST1060/flash/flash_aspeed.c:199:
+		printk("%d Command is not supported", xfer->cmd);

WARNING: braces {} are not necessary for any arm of this statement
#219: FILE: Silicon/AST1060/flash/flash_aspeed.c:219:
+	if (DeviceId == BMC_SPI || DeviceId == PCH_SPI) {
[...]
+	} else {
[...]

total: 0 errors, 18 warnings, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/flash/flash_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:1:
+/*

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#4: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:4:
+ *  SPDX-License-Identifier: Apache-2.0

WARNING: printk() should include KERN_<LEVEL> facility level
#32: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:32:
+		printk("watchdog_init error: fail to install dev timeout. \n");

WARNING: Prefer using '"%s...", __func__' to using 'watchdog_init', this function's name, in a string
#32: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:32:
+		printk("watchdog_init error: fail to install dev timeout. \n");

WARNING: unnecessary whitespace before a quoted newline
#32: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:32:
+		printk("watchdog_init error: fail to install dev timeout. \n");

WARNING: printk() should include KERN_<LEVEL> facility level
#38: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:38:
+		printk("watchdog_init error: fail to setup dev timeout. \n");

WARNING: Prefer using '"%s...", __func__' to using 'watchdog_init', this function's name, in a string
#38: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:38:
+		printk("watchdog_init error: fail to setup dev timeout. \n");

WARNING: unnecessary whitespace before a quoted newline
#38: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.c:38:
+		printk("watchdog_init error: fail to setup dev timeout. \n");

total: 0 errors, 8 warnings, 77 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/watchdog/watchdog_aspeed.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
WARNING: Missing or malformed SPDX-License-Identifier tag in line 1
#1: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.h:1:
+

WARNING: Misplaced SPDX-License-Identifier tag - use line 1 instead
#5: FILE: Silicon/AST1060/watchdog/watchdog_aspeed.h:5:
+ * SPDX-License-Identifier: Apache-2.0

total: 0 errors, 2 warnings, 63 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

Silicon/AST1060/watchdog/watchdog_aspeed.h has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainers.
total: 0 errors, 0 warnings, 1 lines checked

Silicon/CMakeLists.txt has no obvious style problems and is ready for submission.
